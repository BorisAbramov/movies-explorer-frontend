{"version":3,"sources":["contexts/CurrentUserContext.js","utils/constants.js","utils/errorMessages.js","utils/MoviesApi.js","utils/MainApi.js","utils/utils.js","utils/localStorage.js","utils/informationalMessages.js","components/ProtectedRoute/ProtectedRoute.js","components/Navigation/Navigation.js","components/Header/Header.js","components/AboutProject/AboutProject.js","components/Promo/Promo.js","components/Techs/Techs.js","images/about-me-photo.JPG","components/AboutMe/AboutMe.js","components/Portfolio/Portfolio.js","components/Main/Main.js","components/Footer/Footer.js","hooks/useFormValidator.js","components/FilterCheckbox/FilterCheckbox.js","components/SearchForm/SearchForm.js","components/MoviesCard/MoviesCard.js","components/MoviesCardList/MoviesCardList.js","components/Preloader/Preloader.js","components/SearchMessage/SearchMessage.js","components/Movies/Movies.js","components/SavedMovies/SavedMovies.js","components/Register/Register.js","components/Login/Login.js","components/Profile/Profile.js","components/NotFound/NotFound.js","components/Popup/Popup.js","components/ErrorMessagePopup/ErrorMessagePopup.js","components/App/App.js","index.js"],"names":["CurrentUserContext","React","createContext","BREAKPOINTS","BASIC_NUMBER_CARDS","NUMBER_CARDS_IN_ROW","DEFAULT_VALUES_API_DATA","API","moviesURL","savedMoviesURL","headers","AUTHORIZATION_ERRORS","MOVIE_CARD_ERRORS","API_ERRORS","api","baseUrl","this","_baseUrl","res","ok","json","Promise","reject","status","statusText","fetch","then","_checkStatus","checkStatus","calculateNumberMoviesCards","onButtonAddMoreCards","currentWindowWidth","window","innerWidth","getNumberCardsForAlignLastRow","cards","currentNumberCards","iteration","summ","filterMoviesCards","search","checkboxes","filteredMoviesCardsOnlyBySearcyValue","filteredMoviesCards","filter","card","matchBySearchValue","year","findMatchSearchValue","country","director","description","name","lang","checkRuLetters","nameRU","nameEN","findMatchSearchValueCheckboxes","push","short","duration","findMatchSortingCheckboxes","cardName","test","value","toLowerCase","includes","alphabet","sortAlphabetically","resultFiltered","resultFilteredOnlyBySearcyValue","calculateNumberEnabledCheckboxes","arrayCheckboxes","reduce","p","i","sort","a","b","trim","getAllSavedValuesFromLocalStorage","searchValueMovies","localStorage","getItem","searchValueSavedMovies","moviesCheckboxes","multi","savedMoviesCheckboxes","moviesCards","JSON","parse","getMoviesCardsFromLocalStorage","totalNumberMoviesCards","removeItemsFromLocalStorage","removeItem","removeMoviesCheckboxes","removeSavedMoviesCheckboxes","AUTHORIZATION_MESSAGES","AUTHORIZATION_STATUSES","MOVIE_SEARCH_FORM_MESSAGES","ProtectedRoute","Component","component","props","loggedIn","to","Navigation","place","useState","mobileMenuOn","setMobileMenuOn","mobileMenuCloseOn","setMobileMenuCloseOn","handleButtonBurgerClick","e","setTimeout","target","classList","contains","className","onClick","activeClassName","exact","type","smooth","href","rel","Header","mainStyleHeader","visibleHeader","AboutProject","Promo","Techs","AboutMe","src","photo","alt","Portfolio","Main","Footer","visibleFooter","useFormValidator","values","setValues","errors","setErrors","isValid","setIsValid","resetForm","useCallback","newValues","newErrors","newIsValid","handleChange","title","validity","patternMismatch","validationMessage","closest","checkValidity","FilterCheckbox","checkboxOn","handleMovieCheckbox","checkbox","checked","onChange","SearchForm","searchValueCheckboxes","sortingCheckboxes","onSearchMovies","settingsButtons","previousValueSearchForm","locationSavedMovies","currentFormValidator","inputValue","setInputValue","onSubmit","preventDefault","movie","placeholder","minLength","required","onInput","defaultValue","disabled","map","state","handler","MoviesCard","onCardLike","savedMoviesCards","onCardDelete","statusLikeDislikeMovieCard","moviesCardTitle","isLiked","some","movieId","id","hours","Math","floor","minutes","convertMinutesToHours","handleDeleteCard","trailer","trailerLink","image","url","slice","MoviesCardList","onAddMoreCard","_id","length","Preloader","SearchMessage","searchMessage","Movies","moviesSearchValueCheckboxes","moviesSortingCheckboxes","moviesSettingsButtons","handleSearchValue","visiblePreloader","handleMoviesCards","searchMessageMovies","SavedMovies","savedMoviesSearchValueCheckboxes","savedMoviesSortingCheckboxes","savedMoviesSettingsButtons","preloaderVisible","onSearchSavedMovies","searchMessageSavedMovies","Register","onRegister","formSubmitSendingStatus","messageWithResultSubmit","email","password","maxLength","pattern","Login","onLogin","Profile","signOut","onEditProfile","currentUser","useContext","handleChangeInput","useEffect","NotFound","navigate","useHistory","goBack","Popup","isOpen","onClose","children","ErrorMessagePopup","errorMessage","App","location","useLocation","history","setLoggedIn","setCurrentUser","setMainStyleHeader","setLocationSavedMovies","setVisibleHeader","setVisibleFooter","visiblePreloaderLoggedIn","setVisiblePreloaderLoggedIn","visiblePreloaderMovies","setVisiblePreloaderMovies","errorMessagePopupForError","setErrorMessagePopupForError","setStatusLikeDislikeMovieCard","statusSubmitAuthorizationForms","setStatusSubmitAuthorizationForms","messageWithResultSubmitAuthorizationForms","setMessageWithResultSubmitAuthorizationForms","pathURL","setPathURL","nameMoviesCheckbox","setNameMoviesCheckbox","yearMoviesCheckbox","setYearMoviesCheckbox","countryMoviesCheckbox","setCountryMoviesCheckbox","directorMoviesCheckbox","setDirectorMoviesCheckbox","descriptionMoviesCheckbox","setDescriptionMoviesCheckbox","shortMoviesCheckbox","setShortMoviesCheckbox","alphabetMoviesCheckbox","setAlphabetMoviesCheckbox","multiMoviesCheckbox","setMultiMoviesCheckbox","langMoviesCards","setLangMoviesCards","setSearchValueMovies","messageWithResultSearchMovies","setMessageWithResultSearchMovies","setMoviesCards","setFilteredMoviesCards","setFilteredMoviesCardsOnlyBySearcyValue","displayedMoviesCards","setDisplayedMoviesCards","setTotalNumberMoviesCards","nameSavedMoviesCheckbox","setNameSavedMoviesCheckbox","yearSavedMoviesCheckbox","setYearSavedMoviesCheckbox","countrySavedMoviesCheckbox","setCountrySavedMoviesCheckbox","directorSavedMoviesCheckbox","setDirectorSavedMoviesCheckbox","descriptionSavedMoviesCheckbox","setDescriptionSavedMoviesCheckbox","shortSavedMoviesCheckbox","setShortSavedMoviesCheckbox","alphabetSavedMoviesCheckbox","setAlphabetSavedMoviesCheckbox","multiSavedMoviesCheckbox","setMultiSavedMoviesCheckbox","langSavedMoviesCards","setLangSavedMoviesCards","setSearchValueSavedMovies","messageWithResultSearchSavedMovies","setMessageWithResultSearchSavedMovies","setSavedMoviesCards","filteredSavedMoviesCards","setFilteredSavedMoviesCards","filteredSavedMoviesCardsOnlyBySearcyValue","setFilteredSavedMoviesCardsOnlyBySearcyValue","method","body","stringify","login","data","token","setItem","handleDataLogin","catch","err","finally","jwt","checkValidityToken","getSavedMoviesCardsFromAPI","Authorization","resetStatesForRegisteredUser","handleShortMoviesCheckbox","searchValue","getMoviesCardsFromAPI","handleFilterMoviesCards","getMovieCards","handleCardLike","URL","saveMovieCard","thumbnail","formats","handleCardDelete","cardId","deleteMovieCard","find","c","handleMoviesCheckboxes","setState","resetAllStatesMoviesCheckboxes","nameState","handleSavedMoviesCheckboxes","resetAllStatesSavedMoviesCheckboxes","route","pathname","numberCards","Provider","path","editProfile","register","reload","numberCardsInRow","totalNumberCards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a4f15e0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","const DURATION_SHORT_MOVIE = 40;\r\n\r\nconst BREAKPOINTS = {\r\n  mobile: 629,\r\n  tablet: 979,\r\n  laptop: 1279,\r\n};\r\n\r\nconst BASIC_NUMBER_CARDS = {\r\n  mobile: 5,\r\n  tablet: 8,\r\n  laptop: 12,\r\n  desktop: 16,\r\n};\r\n\r\nconst NUMBER_CARDS_IN_ROW = {\r\n  mobile: 1,\r\n  tablet: 2,\r\n  laptop: 3,\r\n  desktop: 4,\r\n};\r\n\r\nconst DEFAULT_VALUES_API_DATA = {\r\n  string: \"данные отсутствовали в базе BeatfilmMovies\",\r\n  number: 0,\r\n  URLForImage: `https://api.nomoreparties.conodataavailable`,\r\n  URLForVideo: `https://www.youtube.comnodataavailable`,\r\n};\r\n\r\nconst API = {\r\n  moviesURL: \"https://api.nomoreparties.co/beatfilm-movies\",\r\n  savedMoviesURL: \"https://api.diploma-miracle-man.nomoredomains.rocks\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\nexport {\r\n  DEFAULT_VALUES_API_DATA,\r\n  API,\r\n  DURATION_SHORT_MOVIE,\r\n  BREAKPOINTS,\r\n  BASIC_NUMBER_CARDS,\r\n  NUMBER_CARDS_IN_ROW,\r\n};\r\n","const AUTHORIZATION_ERRORS = {\r\n  registration: \"Произошла ошибка при регистрации пользователя.\",\r\n  authorization: \"Произошла ошибка при авторизации пользователя.\",\r\n  profileChanges: \"Произошла ошибка при обновлении данных профиля.\",\r\n  tokenValidation: \"Произошла ошибка при проверке токена.\",\r\n};\r\n\r\nconst MOVIE_CARD_ERRORS = {\r\n  getSavedMovies:\r\n    \"Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и обновите страницу.\",\r\n  getMovies:\r\n    \"Во время запроса произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз\",\r\n  likeMovies:\r\n    \"Во время лайка карточки произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз\",\r\n  deleteMovies:\r\n    \"Во время удаления карточки произошла ошибка. Возможно, проблема с соединением или сервер недоступен. Подождите немного и попробуйте ещё раз\",\r\n};\r\n\r\nconst API_ERRORS = {\r\n  general: \"Произошла ошибка при запросе к API\",\r\n};\r\n\r\nexport { AUTHORIZATION_ERRORS, MOVIE_CARD_ERRORS, API_ERRORS };\r\n","import { API } from \"./constants\";\r\nimport { API_ERRORS } from \"./errorMessages\";\r\n\r\nclass Api {\r\n  constructor({ baseUrl }) {\r\n    this._baseUrl = baseUrl;\r\n  }\r\n\r\n  _checkStatus(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(\r\n      `${API_ERRORS.general} ${res.status} ${res.statusText}`\r\n    );\r\n  }\r\n\r\n  getMovieCards() {\r\n    return fetch(`${this._baseUrl}`, {\r\n      headers: API.headers,\r\n    }).then((res) => {\r\n      return this._checkStatus(res);\r\n    });\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: API.moviesURL,\r\n});\r\n","import { API } from \"./constants\";\r\nimport { API_ERRORS } from \"./errorMessages\";\r\n\r\nconst checkStatus = (res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(\r\n    `${API_ERRORS.general} ${res.status} ${res.statusText}`\r\n  );\r\n};\r\n\r\nexport const register = (name, email, password) => {\r\n  return fetch(`${API.savedMoviesURL}/signup`, {\r\n    method: \"POST\",\r\n    headers: API.headers,\r\n    body: JSON.stringify({ name, email, password }),\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n\r\nexport const login = (email, password) => {\r\n  return fetch(`${API.savedMoviesURL}/signin`, {\r\n    method: \"POST\",\r\n    headers: API.headers,\r\n    body: JSON.stringify({ email, password }),\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n\r\nexport const getCurrentUser = (token) => {\r\n  return fetch(`${API.savedMoviesURL}/users/me`, {\r\n    method: \"GET\",\r\n    headers: { ...API.headers, Authorization: `Bearer ${token}` },\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n\r\nexport const editProfile = (name, email, token) => {\r\n  return fetch(`${API.savedMoviesURL}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: { ...API.headers, Authorization: `Bearer ${token}` },\r\n    body: JSON.stringify({ name, email }),\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n\r\nexport const getSavedMoviesCards = (token) => {\r\n  return fetch(`${API.savedMoviesURL}/movies`, {\r\n    method: \"GET\",\r\n    headers: { ...API.headers, Authorization: `Bearer ${token}` },\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n\r\nexport const saveMovieCard = (token, card) => {\r\n  return fetch(`${API.savedMoviesURL}/movies`, {\r\n    method: \"POST\",\r\n    headers: { ...API.headers, Authorization: `Bearer ${token}` },\r\n    body: JSON.stringify(card),\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n\r\nexport const deleteMovieCard = (token, cardId) => {\r\n  return fetch(`${API.savedMoviesURL}/movies/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: { ...API.headers, Authorization: `Bearer ${token}` },\r\n  }).then((res) => {\r\n    return checkStatus(res);\r\n  });\r\n};\r\n","import {\r\n  DURATION_SHORT_MOVIE,\r\n  BREAKPOINTS,\r\n  BASIC_NUMBER_CARDS,\r\n  NUMBER_CARDS_IN_ROW,\r\n} from \"./constants\";\r\n\r\n// функция конвертации продолжительности из минут в часы\r\nexport function convertMinutesToHours(duration) {\r\n  const hours = Math.floor(duration / 60);\r\n  const minutes = duration % 60;\r\n  return `${+hours ? `${hours}ч ` : \"\"}${+minutes ? `${minutes}м` : \"\"}`;\r\n}\r\n\r\n// функция рассчета количества карточек в зависимости от текущей ширины окна для базового случая, когда произошел сабмит формы поиска\r\n// и для случая, когда была нажата кнопка добавления карточек \"Еще\"\r\nexport function calculateNumberMoviesCards(onButtonAddMoreCards) {\r\n  const currentWindowWidth = window.innerWidth;\r\n  if (currentWindowWidth <= BREAKPOINTS.mobile)\r\n    return onButtonAddMoreCards\r\n      ? NUMBER_CARDS_IN_ROW.mobile\r\n      : BASIC_NUMBER_CARDS.mobile;\r\n  if (currentWindowWidth <= BREAKPOINTS.tablet)\r\n    return onButtonAddMoreCards\r\n      ? NUMBER_CARDS_IN_ROW.tablet\r\n      : BASIC_NUMBER_CARDS.tablet;\r\n  if (currentWindowWidth <= BREAKPOINTS.laptop)\r\n    return onButtonAddMoreCards\r\n      ? NUMBER_CARDS_IN_ROW.laptop\r\n      : BASIC_NUMBER_CARDS.laptop;\r\n  return onButtonAddMoreCards\r\n    ? NUMBER_CARDS_IN_ROW.desktop\r\n    : BASIC_NUMBER_CARDS.desktop;\r\n}\r\n\r\n// функция получения необходимомо количества карточек, для выравнивания в последнем ряду.\r\nexport function getNumberCardsForAlignLastRow(\r\n  cards,\r\n  currentNumberCards,\r\n  iteration = 1\r\n) {\r\n  const summ = currentNumberCards + iteration;\r\n  return summ % cards === 0\r\n    ? summ\r\n    : getNumberCardsForAlignLastRow(cards, currentNumberCards, ++iteration);\r\n}\r\n\r\n// фильтр карточек по введенному ключевому слову в форму поиска и отмеченным флажкам.\r\n// заложена масштабируемость, для возможности фильтрации по нескольким чекбоксам.\r\nexport function filterMoviesCards({ cards, search, checkboxes }) {\r\n  const filteredMoviesCardsOnlyBySearcyValue = [];\r\n  const filteredMoviesCards = cards.filter((card) => {\r\n    // если не задано ключевое слово, не ищем по нему, ищем по оставшимся фильтрам.\r\n    const matchBySearchValue = search\r\n      ? // передать массив с именами фильмов в функцию для поиска совпадения по ключевому слову.\r\n        findMatchSearchValueCheckboxes(card)\r\n      : true;\r\n    search &&\r\n      matchBySearchValue &&\r\n      filteredMoviesCardsOnlyBySearcyValue.push(card);\r\n    return (\r\n      // если совпадение по ключевому слову есть, передать картчоку в функцию проверки совпадений согласно установленным чекбоксам сортировки.\r\n      matchBySearchValue && findMatchSortingCheckboxes(card)\r\n    );\r\n  });\r\n\r\n  function findMatchSearchValueCheckboxes(card) {\r\n    if (checkboxes.year && !findMatchSearchValue(card.year)) return false;\r\n    if (checkboxes.country && !findMatchSearchValue(card.country)) return false;\r\n    if (checkboxes.director && !findMatchSearchValue(card.director))\r\n      return false;\r\n    if (checkboxes.description && !findMatchSearchValue(card.description))\r\n      return false;\r\n    if (\r\n      checkboxes.name &&\r\n      !findMatchSearchValue(\r\n        checkboxes.lang === \"RU\"\r\n          ? (checkRuLetters(card.nameRU) && card.nameRU) ||\r\n              (checkRuLetters(card.nameEN) && card.nameEN)\r\n          : !checkRuLetters(card.nameEN) && card.nameEN\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function checkRuLetters(cardName) {\r\n    return /[а-яА-Яё]/g.test(cardName);\r\n  }\r\n\r\n  function findMatchSortingCheckboxes(card) {\r\n    if (checkboxes.short && !findMatchMovieShort(card.duration)) {\r\n      // если хотя бы один из чекбоксов не прошел проверку вернуть false.\r\n      return false;\r\n    }\r\n    // если все проверки (для каждого чекбокса) прошли успешно, вернуть true.\r\n    return true;\r\n  }\r\n\r\n  function findMatchSearchValue(value) {\r\n    return value && value.toLowerCase().includes(search);\r\n  }\r\n\r\n  function findMatchMovieShort(duration) {\r\n    return duration && duration <= DURATION_SHORT_MOVIE;\r\n  }\r\n  checkboxes.alphabet &&\r\n    sortAlphabetically(filteredMoviesCards, checkboxes.lang);\r\n  checkboxes.alphabet &&\r\n    sortAlphabetically(filteredMoviesCardsOnlyBySearcyValue, checkboxes.lang);\r\n  return {\r\n    resultFiltered: filteredMoviesCards,\r\n    resultFilteredOnlyBySearcyValue: filteredMoviesCardsOnlyBySearcyValue,\r\n  };\r\n}\r\n\r\n// проверить, что отмечен минимум один чекбокс группы.\r\nexport function calculateNumberEnabledCheckboxes(arrayCheckboxes) {\r\n  return arrayCheckboxes.reduce((p, i) => (i ? p + i : p), 0);\r\n}\r\n\r\nexport function sortAlphabetically(cards, lang) {\r\n  return lang === \"RU\"\r\n    ? cards.sort((a, b) => {\r\n        a.nameRU = a.nameRU || a.nameEN;\r\n        b.nameRU = b.nameRU || b.nameEN;\r\n        if (!a.nameEN) return -1;\r\n        if (!b.nameEN) return 1;\r\n        return a.nameRU.toLowerCase().trim() < b.nameRU.toLowerCase().trim()\r\n          ? -1\r\n          : 1;\r\n      })\r\n    : cards.sort((a, b) => {\r\n        a.nameEN = a.nameEN || a.nameRU;\r\n        b.nameEN = b.nameEN || b.nameRU;\r\n        if (!a.nameEN) return -1;\r\n        if (!b.nameEN) return 1;\r\n        return a.nameEN.toLowerCase().trim() < b.nameEN.toLowerCase().trim()\r\n          ? -1\r\n          : 1;\r\n      });\r\n}\r\n\r\nexport function checkValidityUrl(URL) {\r\n  return /[a-zA-Z0-9._%+-]+@[a-zA-Z0-9-]+.+.[a-zA-Z]{2,4}/gi.test(URL);\r\n}\r\n","export function getAllSavedValuesFromLocalStorage() {\r\n  const searchValueMovies = getSearchValueMoviesFromLocalStorage();\r\n  const searchValueSavedMovies = getSearchValueSavedMoviesFromLocalStorage();\r\n  const moviesCheckboxes = getMoviesCheckboxesFromLocalStorage();\r\n  const savedMoviesCheckboxes = getSavedMoviesCheckboxexFromLocalStorage();\r\n  const moviesCards = getMoviesCardsFromLocalStorage();\r\n  const totalNumberMoviesCards = getTotalNumberMoviesCardsFromLocalStorage();\r\n  return {\r\n    searchValueMovies,\r\n    searchValueSavedMovies,\r\n    moviesCheckboxes,\r\n    savedMoviesCheckboxes,\r\n    moviesCards,\r\n    totalNumberMoviesCards,\r\n  };\r\n}\r\n\r\nfunction getSearchValueMoviesFromLocalStorage() {\r\n  return localStorage.getItem(\"searchValueMovies\");\r\n}\r\n\r\nfunction getSearchValueSavedMoviesFromLocalStorage() {\r\n  return localStorage.getItem(\"searchValueSavedMovies\");\r\n}\r\n\r\nfunction getMoviesCheckboxesFromLocalStorage() {\r\n  const checkboxes = {\r\n    name: localStorage.getItem(\"nameMoviesCheckbox\") === \"true\",\r\n    year: localStorage.getItem(\"yearMoviesCheckbox\") === \"true\",\r\n    country: localStorage.getItem(\"countryMoviesCheckbox\") === \"true\",\r\n    director: localStorage.getItem(\"directorMoviesCheckbox\") === \"true\",\r\n    description: localStorage.getItem(\"descriptionMoviesCheckbox\") === \"true\",\r\n    short: localStorage.getItem(\"shortMoviesCheckbox\") === \"true\",\r\n    alphabet: localStorage.getItem(\"alphabetMoviesCheckbox\") === \"true\",\r\n    multi: localStorage.getItem(\"multiMoviesCheckbox\") === \"true\",\r\n    lang: localStorage.getItem(\"langMoviesCards\"),\r\n  };\r\n  return checkboxes;\r\n}\r\n\r\nfunction getSavedMoviesCheckboxexFromLocalStorage() {\r\n  const checkboxes = {\r\n    name: localStorage.getItem(\"nameSavedMoviesCheckbox\") === \"true\",\r\n    year: localStorage.getItem(\"yearSavedMoviesCheckbox\") === \"true\",\r\n    country: localStorage.getItem(\"countrySavedMoviesCheckbox\") === \"true\",\r\n    director: localStorage.getItem(\"directorSavedMoviesCheckbox\") === \"true\",\r\n    description:\r\n      localStorage.getItem(\"descriptionSavedMoviesCheckbox\") === \"true\",\r\n    short: localStorage.getItem(\"shortSavedMoviesCheckbox\") === \"true\",\r\n    alphabet: localStorage.getItem(\"alphabetSavedMoviesCheckbox\") === \"true\",\r\n    multi: localStorage.getItem(\"multiSavedMoviesCheckbox\") === \"true\",\r\n    lang: localStorage.getItem(\"langSavedMoviesCards\"),\r\n  };\r\n  return checkboxes;\r\n}\r\n\r\nfunction getMoviesCardsFromLocalStorage() {\r\n  const moviesCards = localStorage.getItem(\"moviesCards\");\r\n  if (moviesCards) {\r\n    return JSON.parse(moviesCards);\r\n  }\r\n}\r\n\r\nfunction getTotalNumberMoviesCardsFromLocalStorage() {\r\n  return localStorage.getItem(\"totalNumberMoviesCards\");\r\n}\r\n\r\nexport function removeItemsFromLocalStorage() {\r\n  localStorage.removeItem(\"jwt\");\r\n  localStorage.removeItem(\"moviesCards\");\r\n  localStorage.removeItem(\"searchValueMovies\");\r\n  localStorage.removeItem(\"searchValueSavedMovies\");\r\n  localStorage.removeItem(\"totalNumberMoviesCards\");\r\n  removeMoviesCheckboxes();\r\n  removeSavedMoviesCheckboxes();\r\n}\r\n\r\nexport function removeMoviesCheckboxes() {\r\n  localStorage.removeItem(\"nameMoviesCheckbox\");\r\n  localStorage.removeItem(\"yearMoviesCheckbox\");\r\n  localStorage.removeItem(\"countryMoviesCheckbox\");\r\n  localStorage.removeItem(\"directorMoviesCheckbox\");\r\n  localStorage.removeItem(\"descriptionMoviesCheckbox\");\r\n  localStorage.removeItem(\"shortMoviesCheckbox\");\r\n  localStorage.removeItem(\"alphabetMoviesCheckbox\");\r\n  localStorage.removeItem(\"multiMoviesCheckbox\");\r\n  localStorage.removeItem(\"langMoviesCards\");\r\n}\r\n\r\nexport function removeSavedMoviesCheckboxes() {\r\n  localStorage.removeItem(\"nameSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"yearSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"countrySavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"directorSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"descriptionSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"shortSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"alphabetSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"multiSavedMoviesCheckbox\");\r\n  localStorage.removeItem(\"langSavedMoviesCards\");\r\n}\r\n","const AUTHORIZATION_MESSAGES = {\r\n  successfulRegistration: \"Пользователь успешно зарегистрирован!\",\r\n  successfulAuthorization: \"Пользователь успешно авторизован!\",\r\n  successfulProfileUpdate: \"Данные профиля успешно обновлены!\",\r\n};\r\n\r\nconst AUTHORIZATION_STATUSES = {\r\n  registerNewUser: \"Регистрация нового пользователя...\",\r\n  authorizationUser: \"Авторизация пользователя...\",\r\n  updatingProfileData: \"Обновление данных профиля...\",\r\n};\r\n\r\nconst MOVIE_SEARCH_FORM_MESSAGES = {\r\n  nothingWasFound: \"Ничего не найдено\",\r\n  noSavedMovies: \"Вы еще не сохранили ни один фильм\",\r\n  noSavedShortMovies:\r\n    \"Из всех ваших сохраненных фильмов не нашлось короткометражных\",\r\n};\r\n\r\nexport {\r\n  AUTHORIZATION_MESSAGES,\r\n  AUTHORIZATION_STATUSES,\r\n  MOVIE_SEARCH_FORM_MESSAGES,\r\n};\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function ProtectedRoute({ component: Component, ...props }) {\r\n  return (\r\n    <Route>\r\n      {() => (props.loggedIn ? <Component {...props} /> : <Redirect to=\"/\" />)}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./navigation.css\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { HashLink } from \"react-router-hash-link\";\r\n\r\nexport default function Navigation({ place, loggedIn }) {\r\n  // стейт мобильного меню\r\n  const [mobileMenuOn, setMobileMenuOn] = useState(false);\r\n  // стейт закрытия мобильного меню\r\n  // использется для плавной анимации, т.к. при display-block не-возможно сделать плавное появление/исчезновение мобильного меню.\r\n  // это связано с тем, что в навигации используются одни и те же ссылки и кнопки для обычного и мобильного меню.\r\n  const [mobileMenuCloseOn, setMobileMenuCloseOn] = useState(false);\r\n\r\n  // обработчик нажатия кнопки мобильного меню\r\n  function handleButtonBurgerClick(e) {\r\n    if (mobileMenuOn) {\r\n      // если мобильное меню активно, изменить стейт для плавного исчезновения мобильного меню.\r\n      setMobileMenuCloseOn(true);\r\n      setTimeout(() => {\r\n        setMobileMenuCloseOn(false);\r\n        setMobileMenuOn(false);\r\n      }, 1000);\r\n    } else {\r\n      loggedIn &&\r\n        e.target.classList.contains(\"navigation__button-burger-menu\") &&\r\n        setMobileMenuOn(true);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {place === \"header\" && (\r\n        <>\r\n          <nav\r\n            className={` navigation ${\r\n              mobileMenuOn ? \"navigation_type_mobile-menu\" : \"\"\r\n            } ${mobileMenuCloseOn ? \"navigation_type_mobile-menu-close\" : \"\"} `}\r\n            onClick={(e) =>\r\n              e.target.classList.contains(\"navigation_type_mobile-menu\")\r\n                ? handleButtonBurgerClick()\r\n                : \"\"\r\n            }\r\n          >\r\n            <ul\r\n              className={` navigation__links ${\r\n                mobileMenuOn ? \"navigation__links_type_mobile-menu\" : \"\"\r\n              } `}\r\n            >\r\n              <li className=\"navigation__list\">\r\n                <NavLink\r\n                  activeClassName={` ${\r\n                    mobileMenuOn ? \"navigation__link_active\" : \"\"\r\n                  } `}\r\n                  className={` navigation__link navigation__link_type_main ${\r\n                    mobileMenuOn ? \"navigation__link_type_mobile-menu\" : \"\"\r\n                  } `}\r\n                  exact\r\n                  to=\"/\"\r\n                  onClick={handleButtonBurgerClick}\r\n                >\r\n                  Главная\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={`navigation__list navigation__list_type_signup ${\r\n                  loggedIn ? \"display-none\" : \"\"\r\n                }`}\r\n              >\r\n                <Link\r\n                  className=\"navigation__link navigation__link_type_signup\"\r\n                  to=\"/sign-up\"\r\n                >\r\n                  Регистрация\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={` navigation__list navigation__list_type_signin ${\r\n                  loggedIn ? \"display-none\" : \"\"\r\n                } `}\r\n              >\r\n                <Link\r\n                  className=\"navigation__link navigation__link_type_signin\"\r\n                  to=\"/sign-in\"\r\n                >\r\n                  Войти\r\n                </Link>\r\n              </li>\r\n              <li\r\n                className={` navigation__list navigation__list_type_movie ${\r\n                  loggedIn ? \"\" : \"display-none\"\r\n                } ${mobileMenuOn ? \"navigation__list_type_mobile-menu\" : \"\"}\r\n              }`}\r\n              >\r\n                <NavLink\r\n                  activeClassName=\"navigation__link_active\"\r\n                  className={` navigation__link navigation__link_type_movie ${\r\n                    mobileMenuOn ? \"navigation__link_type_mobile-menu\" : \"\"\r\n                  } `}\r\n                  to=\"/movies\"\r\n                  onClick={handleButtonBurgerClick}\r\n                >\r\n                  Фильмы\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={` navigation__list ${\r\n                  loggedIn ? \"\" : \"display-none\"\r\n                }`}\r\n              >\r\n                <NavLink\r\n                  activeClassName=\"navigation__link_active\"\r\n                  className={` navigation__link navigation__link_type_movie ${\r\n                    mobileMenuOn ? \"navigation__link_type_mobile-menu\" : \"\"\r\n                  } `}\r\n                  to=\"/saved-movies\"\r\n                  onClick={handleButtonBurgerClick}\r\n                >\r\n                  Сохранённые фильмы\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={` navigation__list navigation__list_type_account ${\r\n                  loggedIn ? \"\" : \"display-none\"\r\n                }\r\n                ${\r\n                  mobileMenuOn\r\n                    ? \"navigation__list_type_mobile-menu-account\"\r\n                    : \"\"\r\n                }\r\n                `}\r\n              >\r\n                <NavLink\r\n                  activeClassName={` ${\r\n                    mobileMenuOn ? \"\" : \"navigation__link_active\"\r\n                  } `}\r\n                  className={` navigation__link navigation__link_type_account ${\r\n                    mobileMenuOn\r\n                      ? \"navigation__link_type_mobile-menu-account\"\r\n                      : \"\"\r\n                  }`}\r\n                  to=\"/profile\"\r\n                  onClick={handleButtonBurgerClick}\r\n                >\r\n                  Аккаунт\r\n                </NavLink>\r\n              </li>\r\n              <li\r\n                className={` navigation__list ${\r\n                  loggedIn ? \"\" : \"display-none\"\r\n                } ${\r\n                  mobileMenuOn\r\n                    ? \"navigation__list_type_button-burger-mobile-menu\"\r\n                    : \"\"\r\n                }`}\r\n              >\r\n                <button\r\n                  className={` navigation__button-burger-menu ${\r\n                    mobileMenuOn\r\n                      ? \"navigation__button-burger-menu_type_mobile-menu\"\r\n                      : \"\"\r\n                  }`}\r\n                  type=\"button\"\r\n                  onClick={handleButtonBurgerClick}\r\n                ></button>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          {/* т.к. в навигации используются одни и те же ссылки и кнопки для обычного и мобильного меню,\r\n          создан этот блок с декоративными элементами, которые отображаются на заднем фоне мобильного меню */}\r\n          <nav\r\n            className={` navigation navigation_type_visible-only-mobile ${\r\n              mobileMenuOn ? \"\" : \"display-none\"\r\n            } `}\r\n          >\r\n            <ul className={` navigation__links navigation__links_type_header`}>\r\n              <li className=\"navigation__list\">\r\n                <div\r\n                  className={` navigation__link navigation__link_type_main `}\r\n                ></div>\r\n              </li>\r\n              <li className={` navigation__list `}>\r\n                <div className={` navigation__button-burger-menu `}></div>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </>\r\n      )}\r\n      {place === \"menu\" && (\r\n        <nav className=\"navigation navigation_place_menu\">\r\n          <ul className=\"navigation__links\">\r\n            <li className=\"navigation__list navigation__list_type_menu\">\r\n              <HashLink\r\n                className=\"navigation__link navigation__link_type_menu\"\r\n                smooth\r\n                to=\"#about-project\"\r\n              >\r\n                О проекте\r\n              </HashLink>\r\n            </li>\r\n            <li className=\"navigation__list navigation__list_type_menu\">\r\n              <HashLink\r\n                className=\"navigation__link navigation__link_type_menu\"\r\n                smooth\r\n                to=\"#technology\"\r\n              >\r\n                Технологии\r\n              </HashLink>\r\n            </li>\r\n            <li className=\"navigation__list navigation__list_type_menu\">\r\n              <HashLink\r\n                className=\"navigation__link navigation__link_type_menu\"\r\n                smooth\r\n                to=\"#about-me\"\r\n              >\r\n                Студент\r\n              </HashLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      )}\r\n      {place === \"about-me\" && (\r\n        <nav className=\"navigation\">\r\n          <ul className=\"navigation__links navigation__links_type_about-me\">\r\n            <li className=\"navigation__list navigation__list_type_about-me\">\r\n              <a\r\n                className=\"navigation__link navigation__link_type_about-me\"\r\n                href=\"https://t.me/nikolaymishaev\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                Telegram\r\n              </a>\r\n            </li>\r\n            <li className=\"navigation__list navigation__list_type_about-me\">\r\n              <a\r\n                className=\"navigation__link navigation__link_type_about-me\"\r\n                href=\"https://github.com/NikolayMishaev\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                Github\r\n              </a>\r\n            </li>\r\n            <li className=\"navigation__list navigation__list_type_about-me\">\r\n              <a\r\n                className=\"navigation__link navigation__link_type_about-me\"\r\n                href=\"https://www.codewars.com/users/NikolayMishaev\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                Codewars\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      )}\r\n      {place === \"footer\" && (\r\n        <nav className=\"navigation\">\r\n          <ul className=\"navigation__links navigation__links_type_footer\">\r\n            <p className=\"navigation__text\">&copy; 2021</p>\r\n            <li className=\"navigation__list navigation__list_type_footer\">\r\n              <a\r\n                className=\"navigation__link navigation__link_type_footer\"\r\n                href=\"https://practicum.yandex.ru\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                Яндекс.Практикум\r\n              </a>\r\n            </li>\r\n            <li className=\"navigation__list navigation__list_type_footer\">\r\n              <a\r\n                className=\"navigation__link navigation__link_type_footer\"\r\n                href=\"https://github.com/BorisAbramov\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                Github\r\n              </a>\r\n            </li>\r\n            <li className=\"navigation__list navigation__list_type_footer\">\r\n              <a\r\n                className=\"navigation__link navigation__link_type_footer\"\r\n                href=\"https://vk.com/borissanych\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n              >\r\n                VK\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      )}\r\n      {place === \"entry\" && (\r\n        <nav className=\"navigation\">\r\n          <ul className=\"navigation__links navigation__links_type_entry\">\r\n            <li className=\"navigation__list\">\r\n              <Link\r\n                className=\"navigation__link navigation__link_type_main\"\r\n                to=\"/\"\r\n              >\r\n                Главная\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nexport default function Header({ mainStyleHeader, loggedIn, visibleHeader }) {\r\n  return (\r\n    <>\r\n      <header\r\n        className={`${\r\n          // отображать Header в зависимости от стейт-переменной и состояния авторизации,\r\n          // т.к. если пользователь авторизован, отобразить Header на странице профиля\r\n          visibleHeader ? \"header\" : \"display-none\"\r\n        } ${mainStyleHeader ? \"\" : \"header_style_movie\"}`}\r\n      >\r\n        <Navigation loggedIn={loggedIn} place=\"header\" />\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport './aboutproject.css';\r\n\r\nexport default function AboutProject() {\r\n    return (\r\n      <section className=\"about-project\">\r\n          {/* <h2 className=\"aboutProject__title\">О проекте</h2>\r\n          <div className=\"aboutProject__block\">\r\n              <div className=\"aboutProject__text\">\r\n                <p className=\"aboutProject__subtitle\">\r\n                Дипломный проект включал 5 этапов\r\n                </p>\r\n                <p className=\"aboutProject__subtitle\">\r\n                На выполнение диплома ушло 5 недель\r\n                </p>\r\n                <p className=\"aboutProject__info\">\r\n                Составление плана, работу над бэкендом, вёрстку, добавление функциональности и финальные доработки.\r\n                </p>\r\n                <p className=\"aboutProject__info\">\r\n                У каждого этапа был мягкий и жёсткий дедлайн, которые нужно было соблюдать, чтобы успешно защититься.\r\n                </p>\r\n              </div>\r\n              <div className=\"aboutProject__time\">\r\n                <div className=\"aboutProject__week\">\r\n                  <p className=\"aboutProject__week-text\">1 неделя</p>\r\n                </div>\r\n                <div className=\"aboutProject__month\">\r\n                <p className=\"aboutProject__month-text\">4 недели</p>\r\n                </div>\r\n                <p className=\"aboutProject__backend\">Back-end</p>\r\n                <p className=\"aboutProject__frontend\">Front-end</p>\r\n              </div>\r\n\r\n          </div> */}\r\n          <h2 className=\"section-title\">О проекте</h2>\r\n      <ul className=\"about-project__description-items\">\r\n        <li className=\"about-project__description-item\">\r\n          <p className=\"about-project__subtitle\">\r\n            Дипломный проект включал 5&nbsp;этапов\r\n          </p>\r\n          <p className=\"about-project__text\">\r\n            Составление плана, работу над бэкендом, вёрстку, добавление\r\n            функциональности и&nbsp;финальные доработки.\r\n          </p>\r\n        </li>\r\n        <li className=\"about-project__description-item\">\r\n          <p className=\"about-project__subtitle\">\r\n            На&nbsp;выполнение диплома ушло 5&nbsp;недель\r\n          </p>\r\n          <p className=\"about-project__text\">\r\n            У&nbsp;каждого этапа был мягкий и&nbsp;жёсткий дедлайн, которые\r\n            нужно было соблюдать, чтобы успешно защититься.\r\n          </p>\r\n        </li>\r\n      </ul>\r\n      <ul className=\"about-project__direction-items\">\r\n        <li className=\"about-project__direction-item\">\r\n          <p className=\"about-project__time\">1 неделя</p>\r\n          <p className=\"about-project__direction\">Back-end</p>\r\n        </li>\r\n        <li className=\"about-project__direction-item about-project__direction-item_style_front-end\">\r\n          <p className=\"about-project__time about-project__time_style_front-end\">\r\n            4 недели\r\n          </p>\r\n          <p className=\"about-project__direction\">Front-end</p>\r\n        </li>\r\n      </ul>\r\n      <p className=\"time\"></p>\r\n      </section>\r\n    );\r\n  }","import React from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./promo.css\";\r\n\r\nexport default function Promo() {\r\n  return (\r\n    <section className='promo'>\r\n    <div className='promo__pic'/>\r\n    <div className='promo__wrapper'>\r\n      <h1 className='promo__title'>Учебный проект студента факультета Веб-разработки.</h1>\r\n      <p className='promo__subtitle'>Листайте ниже, чтобы узнать больше про этот проект и его создателя.</p>\r\n      <NavLink className='promo__link' to='/movies'>Узнать больше</NavLink>\r\n    </div>\r\n  </section>\r\n  );\r\n}","import React from \"react\";\r\nimport './techs.css';\r\n\r\nexport default function Techs() {\r\n    return (\r\n      <section className=\"techs\">\r\n        <h2 className=\"section-title\">Технологии</h2>\r\n        <h3 className=\"techs__title\">7 технологий</h3>\r\n        <p className=\"techs__subtitle\">\r\n          На&nbsp;курсе веб-разработки мы&nbsp;освоили технологии, которые\r\n          применили в дипломном проекте.\r\n        </p>\r\n        <ul className=\"techs__items\">\r\n          <li className=\"techs__item\">HTML</li>\r\n          <li className=\"techs__item\">CSS</li>\r\n          <li className=\"techs__item\">JS</li>\r\n          <li className=\"techs__item\">React</li>\r\n          <li className=\"techs__item\">Git</li>\r\n          <li className=\"techs__item\">Express.js</li>\r\n          <li className=\"techs__item\">mongoDB</li>\r\n        </ul>\r\n      </section>\r\n    );\r\n  }","export default __webpack_public_path__ + \"static/media/about-me-photo.30387d3d.JPG\";","import React from \"react\";\r\nimport './aboutme.css';\r\nimport Navigation from '../Navigation/Navigation';\r\nimport photo from '../../images/about-me-photo.JPG';\r\n\r\nexport default function AboutMe() {\r\n    return (\r\n      <section className=\"about-me\">\r\n        <h2 className=\"section-title section-title_type_about-me\">Студент</h2>\r\n      <article className=\"about-me__wrapper\">\r\n        <h3 className=\"about-me__title\">Борис</h3>\r\n        <p className=\"about-me__subtitle\">Фронтенд-разработчик, 36&nbsp;лет</p>\r\n        <p className=\"about-me__text\">\r\n          Я&nbsp;родился и&nbsp;живу в&nbsp;Москве, закончил математический\r\n          факультет МПГУ им&nbsp;В.И.Ленина. С&nbsp;2009 года работаю\r\n          в&nbsp;системе московского образования. Несколько лет назад меня\r\n          заинтересовала тема веб-разработок и&nbsp;теперь все свободное время\r\n          я изучаю эту интереснейшую сферу.\r\n        </p>\r\n        <Navigation place=\"about-me\" />\r\n      </article>\r\n      <img\r\n        className=\"about-me__photo\"\r\n        src={photo}\r\n        alt=\"фотография студента\"\r\n      ></img>\r\n      </section>\r\n    );\r\n  }","import React from \"react\";\r\nimport \"./portfolio.css\";\r\n\r\nexport default function Portfolio() {\r\n  return (\r\n    <section className=\"portfolio\">\r\n      <h2 className=\"portfolio__title\">Портфолио</h2>\r\n      <nav className=\"portfolio__navigation\">\r\n        <ul className=\"portfolio__links\">\r\n          <li className=\"portfolio__list\">\r\n            <a\r\n              className=\"portfolio__link\"\r\n              href=\"https://borisabramov.github.io/how-to-learn/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Статичный сайт\r\n            </a>\r\n          </li>\r\n          <li className=\"portfolio__list\">\r\n            <a\r\n              className=\"portfolio__link\"\r\n              href=\"https://borisabramov.github.io/russian-travel/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Адаптивный сайт\r\n            </a>\r\n          </li>\r\n          <li className=\"portfolio__list\">\r\n            <a\r\n              className=\"portfolio__link\"\r\n              href=\"https://mesto-full.nomoredomains.work/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n            >\r\n              Одностраничное приложение\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport AboutProject from '../AboutProject/AboutProject';\r\nimport Promo from '../Promo/Promo';\r\nimport Techs from '../Techs/Techs';\r\nimport AboutMe from '../AboutMe/AboutMe';\r\nimport Portfolio from '../Portfolio/Portfolio';\r\nimport './main.css';\r\n\r\nfunction Main() {\r\n  \r\n      return (\r\n        <>\r\n        <Promo />\r\n        <AboutProject />\r\n        <Techs />\r\n        <AboutMe />\r\n        <Portfolio />\r\n        </>\r\n      )\r\n  }\r\n  \r\n  export default Main;","import React from \"react\";\r\nimport \"./footer.css\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nexport default function Footer({ visibleFooter }) {\r\n  return (\r\n    <footer className={` ${visibleFooter ? \"footer\" : \"display-none\"} `}>\r\n      <p className=\"footer__description\">\r\n        Учебный проект Яндекс.Практикум х BeatFilm.\r\n      </p>\r\n      <Navigation place=\"footer\" />\r\n    </footer>\r\n  );\r\n}","import { useState, useCallback } from \"react\";\r\n\r\nexport default function useFormValidator() {\r\n  const [values, setValues] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, title, validity } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n    setErrors({\r\n      ...errors,\r\n      [name]: validity.patternMismatch ? title : e.target.validationMessage,\r\n      // если для валидации поля input используется атрибут pattern, то вывести подробное сообщение об ошибке из значения атрибута title.\r\n    });\r\n    setIsValid(e.target.closest(\"form\").checkValidity());\r\n  };\r\n\r\n  const resetForm = useCallback(\r\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\r\n      setValues(newValues);\r\n      setErrors(newErrors);\r\n      setIsValid(newIsValid);\r\n    },\r\n    [setValues, setErrors, setIsValid]\r\n  );\r\n\r\n  return {\r\n    values,\r\n    handleChange,\r\n    errors,\r\n    isValid,\r\n    resetForm,\r\n    setValues,\r\n    setIsValid,\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./filterCheckbox.css\";\r\n\r\nexport default function FilterCheckbox({\r\n  title,\r\n  checkboxOn,\r\n  handleMovieCheckbox,\r\n  className,\r\n  checkbox,\r\n}) {\r\n  function handleOnChange() {\r\n    handleMovieCheckbox(checkbox);\r\n  }\r\n  return (\r\n    <li className={` filter-checkbox  `}>\r\n      <label className=\"filter-checkbox__field\">\r\n        <input\r\n          className=\"filter-checkbox__checkbox\"\r\n          type=\"checkbox\"\r\n          checked={checkboxOn}\r\n          onChange={handleOnChange}\r\n        ></input>\r\n        <span\r\n          className={` filter-checkbox__visible-checkbox filter-checkbox__visible-checkbox_type_${className} `}\r\n        ></span>\r\n      </label>\r\n      <p className=\"filter-checkbox__checkbox-name\">{title}</p>\r\n    </li>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./searchForm.css\";\r\nimport useFormValidator from \"../../hooks/useFormValidator\";\r\nimport FilterCheckbox from \"../FilterCheckbox/FilterCheckbox\";\r\n\r\nexport default function SearchForm({\r\n  searchValueCheckboxes,\r\n  sortingCheckboxes,\r\n  settingsButtons,\r\n  onSearchMovies,\r\n  previousValueSearchForm,\r\n  locationSavedMovies,\r\n}) {\r\n  const currentFormValidator = useFormValidator();\r\n  // стейт, для проверки данных в поле инпута, т.к. при вставке в поле инпута значения из localStorage, событие onChange еще не сработало\r\n  const [inputValue, setInputValue] = useState(false);\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onSearchMovies(formatInputValue());\r\n  }\r\n  function formatInputValue() {\r\n    const inputValue = currentFormValidator.isValid\r\n      ? currentFormValidator.values.movie\r\n      : previousValueSearchForm;\r\n    return inputValue.toLowerCase();\r\n  }\r\n\r\n  function handleInputValue(e) {\r\n    setInputValue(e.target.value === \"\");\r\n  }\r\n  return (\r\n    <section className=\"search\">\r\n      <form className=\"search-form\" onSubmit={handleSubmit}>\r\n        <div className=\"search-form__search\">\r\n          <input\r\n            name=\"movie\"\r\n            className=\"search-form__input\"\r\n            type=\"text\"\r\n            placeholder=\"Фильм\"\r\n            minLength=\"1\"\r\n            required\r\n            onChange={currentFormValidator.handleChange}\r\n            onInput={handleInputValue}\r\n            defaultValue={previousValueSearchForm}\r\n          ></input>\r\n          <button\r\n            className=\"search-form__button-submit\"\r\n            type=\"submit\"\r\n            // если нет значения поиска и в поле ничего не введено, выключить кнопку сабмита, иначе включить, если поле валидно и есть значение в поле\r\n            // здесь отслеживается событие onInput, т.к. при вставке в поле инпута значения из localStorage, событие onChange еще не сработало\r\n            disabled={\r\n              !previousValueSearchForm && !currentFormValidator.values.movie\r\n                ? true\r\n                : !currentFormValidator.isValid && inputValue\r\n            }\r\n            // disabled={!currentFormValidator.isValid}\r\n          >\r\n            Найти\r\n          </button>\r\n          <span\r\n            className={` search-form__input-error ${\r\n              // если после события onChange поля инпута есть ошибка валидации, отобразить блок с кастомной ошибкой.\r\n              currentFormValidator.errors.movie || inputValue\r\n                ? \"search-form__input-error_active\"\r\n                : \"\"\r\n            }`}\r\n          >\r\n            Нужно ввести ключевое слово\r\n          </span>\r\n        </div>\r\n        {/* <fieldset className=\"search-form__fieldset\">\r\n          <legend className=\"search-form__legend\">Критерии поиска</legend>\r\n          <ul className=\"search-form__list\">\r\n            {searchValueCheckboxes.map((checkbox, i) => (\r\n              <FilterCheckbox\r\n                key={i}\r\n                checkbox={checkbox}\r\n                checkboxOn={checkbox.state}\r\n                handleMovieCheckbox={checkbox.handler}\r\n                title={checkbox.title}\r\n              />\r\n            ))}\r\n          </ul>\r\n          <div\r\n            className={`search-form__overlay ${\r\n              previousValueSearchForm || currentFormValidator.values.movie\r\n                ? \"\"\r\n                : \"search-form__overlay_active\"\r\n            }`}\r\n          ></div>\r\n        </fieldset> */}\r\n        <fieldset className=\"search-form__fieldset\">\r\n          <legend className=\"search-form__legend\">Сортировка</legend>\r\n          <ul className=\"search-form__list\">\r\n            {sortingCheckboxes.map((checkbox, i) => (\r\n              <FilterCheckbox\r\n                key={i}\r\n                checkboxOn={checkbox.state}\r\n                handleMovieCheckbox={checkbox.handler}\r\n                title={checkbox.title}\r\n              />\r\n            ))}\r\n          </ul>\r\n          {!locationSavedMovies && (\r\n            <div\r\n              className={`search-form__overlay ${\r\n                previousValueSearchForm || currentFormValidator.values.movie\r\n                  ? \"\"\r\n                  : \"search-form__overlay_active\"\r\n              }`}\r\n            ></div>\r\n          )}\r\n        </fieldset>\r\n        {/* <fieldset className=\"search-form__fieldset\">\r\n          <legend className=\"search-form__legend\">Настройки</legend>\r\n          <ul className=\"search-form__list search-form__list_type_setup\">\r\n            {settingsButtons.map((button, i) =>\r\n              button.type === \"button\" ? (\r\n                <li className=\"search-form__item\" key={i}>\r\n                  <button\r\n                    className={`search-form__button-setup search-form__button-setup_type_${button.className}`}\r\n                    type=\"button\"\r\n                    onClick={button.handler}\r\n                  >\r\n                    {button.title}\r\n                  </button>\r\n                </li>\r\n              ) : (\r\n                <FilterCheckbox\r\n                  key={i}\r\n                  checkboxOn={button.state}\r\n                  handleMovieCheckbox={button.handler}\r\n                  title={button.title}\r\n                  className={button.className}\r\n                />\r\n              )\r\n            )}\r\n          </ul>\r\n          <div\r\n            className={`search-form__overlay ${\r\n              previousValueSearchForm || currentFormValidator.values.movie\r\n                ? \"\"\r\n                : \"search-form__overlay_active\"\r\n            }`}\r\n          ></div>\r\n        </fieldset> */}\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./moviesCard.css\";\r\nimport { convertMinutesToHours } from \"../../utils/utils\";\r\n\r\nexport default function MoviesCard({\r\n  card,\r\n  locationSavedMovies,\r\n  onCardLike,\r\n  savedMoviesCards,\r\n  onCardDelete,\r\n  statusLikeDislikeMovieCard,\r\n  moviesCardTitle,\r\n}) {\r\n  const isLiked = savedMoviesCards.some((i) => i.movieId === card.id);\r\n  const duration = card.duration\r\n    ? convertMinutesToHours(card.duration)\r\n    : \"нет данных\";\r\n\r\n  function handleLikeClick(e) {\r\n    isLiked ? handleDeleteCard() : onCardLike(card);\r\n  }\r\n\r\n  function handleDeleteCard() {\r\n    onCardDelete(card);\r\n  }\r\n  return (\r\n    <>\r\n      <li\r\n        className={` movies-card ${\r\n          locationSavedMovies ? \"movies-card_place_saved-movies\" : \"\"\r\n        }`}\r\n      >\r\n        <a\r\n          className=\"movies-card__link\"\r\n          href={locationSavedMovies ? card.trailer : card.trailerLink}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <img\r\n            className=\"movies-card__wallpaper\"\r\n            src={`${\r\n              typeof card.image === \"object\"\r\n                ? `https://api.nomoreparties.co/${card.image.url.slice(1)}`\r\n                : card.image\r\n            }`}\r\n            alt={card.nameRU}\r\n          />\r\n          <div className=\"card-overlay\">\r\n            <h2 className=\"card-overlay__title\">\r\n              {moviesCardTitle === \"RU\"\r\n                ? card.nameRU || card.nameEN || \"нет данных\"\r\n                : card.nameEN || card.nameRU || \"нет данных\"}\r\n            </h2>\r\n            <p className=\"card-overlay__year\">\r\n              Год: {card.year || \"нет данных\"}\r\n            </p>\r\n            <p className=\"card-overlay__country\">\r\n              Страна: {card.country || \"нет данных\"}\r\n            </p>\r\n            <p className=\"card-overlay__director\">\r\n              Режиссер: {card.director || \"нет данных\"}\r\n            </p>\r\n            <p className=\"card-overlay__duration\">\r\n              Продолжительность: {duration}\r\n            </p>\r\n            <p className=\"card-overlay__description\">\r\n              {card.description || \"нет данных\"}\r\n            </p>\r\n          </div>\r\n        </a>\r\n        <div className=\"movies-card__description\">\r\n          <h2 className=\"movies-card__title\">\r\n            {moviesCardTitle === \"RU\"\r\n              ? card.nameRU || card.nameEN || \"нет данных\"\r\n              : card.nameEN || card.nameRU || \"нет данных\"}\r\n          </h2>\r\n          <button\r\n            disabled={statusLikeDislikeMovieCard}\r\n            className={`movies-card__like ${\r\n              isLiked ? \"movies-card__like_active\" : \"\"\r\n            } ${\r\n              locationSavedMovies ? \"movies-card__like_type_saved-movies\" : \"\"\r\n            }\r\n          `}\r\n            type=\"button\"\r\n            onClick={locationSavedMovies ? handleDeleteCard : handleLikeClick}\r\n          ></button>\r\n          <p className=\"movies-card__duration\">{duration}</p>\r\n        </div>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./moviesCardList.css\";\r\nimport MoviesCard from \"../MoviesCard/MoviesCard\";\r\n\r\nexport default function MoviesCardList({\r\n  locationSavedMovies,\r\n  moviesCards,\r\n  onCardLike,\r\n  savedMoviesCards,\r\n  onCardDelete,\r\n  filteredMoviesCards = [],\r\n  onAddMoreCard,\r\n  statusLikeDislikeMovieCard,\r\n  moviesCardTitle,\r\n}) {\r\n  return (\r\n    <section\r\n      className={` movies-card-list ${\r\n        locationSavedMovies ? \"movies-card-list_place_saved-movies\" : \"\"\r\n      } `}\r\n    >\r\n      <ul className={\"movies-card-list__container\"}>\r\n        {moviesCards.map((card) => (\r\n          <MoviesCard\r\n            card={card}\r\n            key={card._id || card.id}\r\n            locationSavedMovies={locationSavedMovies}\r\n            onCardLike={onCardLike}\r\n            savedMoviesCards={savedMoviesCards}\r\n            onCardDelete={onCardDelete}\r\n            statusLikeDislikeMovieCard={statusLikeDislikeMovieCard}\r\n            moviesCardTitle={moviesCardTitle}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <button\r\n        className={` ${\r\n          locationSavedMovies ||\r\n          moviesCards.length === filteredMoviesCards.length\r\n            ? \"display-none\"\r\n            : \"movies-card-list__button-add-more-cards\"\r\n        } `}\r\n        type=\"button\"\r\n        onClick={onAddMoreCard}\r\n      >\r\n        Ещё\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './Preloader.css'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className=\"preloader\">\r\n            <div className=\"preloader__container\">\r\n                <span className=\"preloader__round\"></span>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader\r\n","import React from \"react\";\r\nimport \"./searchMessage.css\";\r\n\r\nexport default function SearchMessage({ searchMessage }) {\r\n  return (\r\n    <section className=\"search-message\">\r\n      <p\r\n        className={` search-message__message ${\r\n          searchMessage.includes(\"ошибка\")\r\n            ? \"search-message__message_type_error\"\r\n            : \"\"\r\n        } `}\r\n      >\r\n        {searchMessage}\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./movies.css\";\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport SearchMessage from \"../SearchMessage/SearchMessage\";\r\n\r\nexport default function Movies({\r\n  moviesSearchValueCheckboxes,\r\n  moviesSortingCheckboxes,\r\n  moviesSettingsButtons,\r\n  handleSearchValue,\r\n  visiblePreloader,\r\n  handleMoviesCards,\r\n  moviesCards,\r\n  searchMessageMovies,\r\n  onCardLike,\r\n  savedMoviesCards,\r\n  onSearchMovies,\r\n  onCardDelete,\r\n  previousValueSearchForm,\r\n  filteredMoviesCards,\r\n  onAddMoreCard,\r\n  statusLikeDislikeMovieCard,\r\n  moviesCardTitle,\r\n}) {\r\n  return (\r\n    <>\r\n      <SearchForm\r\n        searchValueCheckboxes={moviesSearchValueCheckboxes}\r\n        sortingCheckboxes={moviesSortingCheckboxes}\r\n        settingsButtons={moviesSettingsButtons}\r\n        handleMoviesCards={handleMoviesCards}\r\n        handleSearchValue={handleSearchValue}\r\n        onSearchMovies={onSearchMovies}\r\n        previousValueSearchForm={previousValueSearchForm}\r\n      />\r\n      {visiblePreloader ? (\r\n        <Preloader />\r\n      ) : searchMessageMovies ? (\r\n        <SearchMessage searchMessage={searchMessageMovies} />\r\n      ) : (\r\n        <MoviesCardList\r\n          moviesCards={moviesCards}\r\n          onCardLike={onCardLike}\r\n          onCardDelete={onCardDelete}\r\n          savedMoviesCards={savedMoviesCards}\r\n          filteredMoviesCards={filteredMoviesCards}\r\n          onAddMoreCard={onAddMoreCard}\r\n          statusLikeDislikeMovieCard={statusLikeDislikeMovieCard}\r\n          moviesCardTitle={moviesCardTitle}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./savedMovies.css\";\r\n// импорт компонентов\r\nimport SearchForm from \"../SearchForm/SearchForm\";\r\nimport MoviesCardList from \"../MoviesCardList/MoviesCardList\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport SearchMessage from \"../SearchMessage/SearchMessage\";\r\n\r\nexport default function SavedMovies({\r\n  savedMoviesSearchValueCheckboxes,\r\n  savedMoviesSortingCheckboxes,\r\n  savedMoviesSettingsButtons,\r\n  preloaderVisible,\r\n  locationSavedMovies,\r\n  savedMoviesCards,\r\n  onCardLike,\r\n  onCardDelete,\r\n  onSearchSavedMovies,\r\n  searchMessageSavedMovies,\r\n  previousValueSearchForm,\r\n  moviesCardTitle,\r\n}) {\r\n  return (\r\n    <>\r\n      <SearchForm\r\n        searchValueCheckboxes={savedMoviesSearchValueCheckboxes}\r\n        sortingCheckboxes={savedMoviesSortingCheckboxes}\r\n        settingsButtons={savedMoviesSettingsButtons}\r\n        onSearchMovies={onSearchSavedMovies}\r\n        previousValueSearchForm={previousValueSearchForm}\r\n        locationSavedMovies={locationSavedMovies}\r\n      />\r\n      {preloaderVisible ? (\r\n        <Preloader />\r\n      ) : searchMessageSavedMovies ? (\r\n        <SearchMessage searchMessage={searchMessageSavedMovies} />\r\n      ) : (\r\n        <MoviesCardList\r\n          moviesCards={savedMoviesCards}\r\n          locationSavedMovies={locationSavedMovies}\r\n          onCardLike={onCardLike}\r\n          onCardDelete={onCardDelete}\r\n          savedMoviesCards={savedMoviesCards}\r\n          moviesCardTitle={moviesCardTitle}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Register.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFormValidator from \"../../hooks/useFormValidator\";\r\n// импорт компонентов\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nexport default function Register({\r\n  onRegister,\r\n  formSubmitSendingStatus,\r\n  messageWithResultSubmit,\r\n}) {\r\n  const currentFormValidator = useFormValidator();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onRegister(\r\n      currentFormValidator.values.name,\r\n      currentFormValidator.values.email,\r\n      currentFormValidator.values.password\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"entry\">\r\n      <Navigation place=\"entry\" />\r\n      <h2 className=\"entry__title\">Добро пожаловать!</h2>\r\n      <form className=\"entry__form\" onSubmit={handleSubmit}>\r\n        <label className=\"entry__field\">\r\n          Имя\r\n          <input\r\n            // выключить поле, если отправляется запрос.\r\n            disabled={formSubmitSendingStatus}\r\n            id=\"entry-input-name\"\r\n            required\r\n            name=\"name\"\r\n            minLength=\"5\"\r\n            maxLength=\"40\"\r\n            pattern=\"[a-zA-Zа-яА-Я -]*\"\r\n            title=\"Имя должно содержать только латиницу, кириллицу, пробел или дефис\"\r\n            className={` entry__input ${\r\n              currentFormValidator.errors.name ? \"entry__input_type_error\" : \"\"\r\n            }`}\r\n            type=\"text\"\r\n            value={currentFormValidator.values.name || \"\"}\r\n            onChange={currentFormValidator.handleChange}\r\n          />\r\n          <span className=\"entry__input-error entry-input-name-error\">\r\n            {currentFormValidator.errors.name}\r\n          </span>\r\n        </label>\r\n        <label className=\"entry__field\">\r\n          E-mail\r\n          <input\r\n            // выключить поле, если отправляется запрос.\r\n            disabled={formSubmitSendingStatus}\r\n            id=\"entry-input-email\"\r\n            required\r\n            name=\"email\"\r\n            minLength=\"5\"\r\n            pattern=\"([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}\"\r\n            title=\"введен некорректный адрес электронной почты\"\r\n            className={` entry__input ${\r\n              currentFormValidator.errors.email ? \"entry__input_type_error\" : \"\"\r\n            }`}\r\n            type=\"email\"\r\n            value={currentFormValidator.values.email || \"\"}\r\n            onChange={currentFormValidator.handleChange}\r\n          />\r\n          <span className=\"entry__input-error entry-input-email-error\">\r\n            {currentFormValidator.errors.email}\r\n          </span>\r\n        </label>\r\n        <label className=\"entry__field\">\r\n          Пароль\r\n          <input\r\n            // выключить поле, если отправляется запрос.\r\n            disabled={formSubmitSendingStatus}\r\n            id=\"entry-input-password\"\r\n            required\r\n            name=\"password\"\r\n            minLength=\"8\"\r\n            maxLength=\"40\"\r\n            className={` entry__input ${\r\n              currentFormValidator.errors.password\r\n                ? \"entry__input_type_error\"\r\n                : \"\"\r\n            }`}\r\n            type=\"password\"\r\n            value={currentFormValidator.values.password || \"\"}\r\n            onChange={currentFormValidator.handleChange}\r\n          />\r\n          <span className=\"entry__input-error entry-input-password-error\">\r\n            {currentFormValidator.errors.password}\r\n          </span>\r\n        </label>\r\n        <span\r\n          className={` entry__submit-message ${\r\n            messageWithResultSubmit ? \"entry__submit-message_active\" : \"\"\r\n          } \r\n          ${\r\n            messageWithResultSubmit.includes(\"ошибка\")\r\n              ? \"entry__submit-message_type_error\"\r\n              : \"\"\r\n          }\r\n          `}\r\n        >\r\n          {messageWithResultSubmit}\r\n        </span>\r\n        <button\r\n          aria-label=\"submit form\"\r\n          className={` entry__button-submit ${\r\n            !currentFormValidator.isValid\r\n              ? \"entry__button-submit_type_disabled\"\r\n              : \"\"\r\n          } `}\r\n          type=\"submit\"\r\n          // выключить кнопку, если отправляется запрос или введенные данные невалидны.\r\n          disabled={formSubmitSendingStatus || !currentFormValidator.isValid}\r\n        >\r\n          {formSubmitSendingStatus || \"Зарегистрироваться\"}\r\n        </button>\r\n        <p className=\"entry__text\">\r\n          Уже зарегистрированы?\r\n          <Link className=\"entry__link\" to=\"/sign-in\">\r\n            Войти\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Login.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFormValidator from \"../../hooks/useFormValidator\";\r\n// импорт компонентов\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nexport default function Login({\r\n  onLogin,\r\n  formSubmitSendingStatus,\r\n  messageWithResultSubmit,\r\n}) {\r\n  const currentFormValidator = useFormValidator();\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onLogin(\r\n      currentFormValidator.values.email,\r\n      currentFormValidator.values.password\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"entry\">\r\n      <Navigation place=\"entry\" />\r\n      <h2 className=\"entry__title\">Рады видеть!</h2>\r\n      <form className=\"entry__form\" onSubmit={handleSubmit}>\r\n        <label className=\"entry__field\">\r\n          E-mail\r\n          <input\r\n            // выключить поле, если отправляется запрос.\r\n            disabled={formSubmitSendingStatus}\r\n            id=\"entry-input-email\"\r\n            required\r\n            name=\"email\"\r\n            minLength=\"5\"\r\n            pattern=\"([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}\"\r\n            title=\"введен некорректный адрес электронной почты\"\r\n            className={` entry__input ${\r\n              currentFormValidator.errors.email ? \"entry__input_type_error\" : \"\"\r\n            }`}\r\n            type=\"email\"\r\n            value={currentFormValidator.values.email || \"\"}\r\n            onChange={currentFormValidator.handleChange}\r\n          />\r\n          <span className=\"entry__input-error entry-input-email-error\">\r\n            {currentFormValidator.errors.email}\r\n          </span>\r\n        </label>\r\n        <label className=\"entry__field\">\r\n          Пароль\r\n          <input\r\n            // выключить поле, если отправляется запрос.\r\n            disabled={formSubmitSendingStatus}\r\n            id=\"entry-input-password\"\r\n            required\r\n            name=\"password\"\r\n            minLength=\"8\"\r\n            maxLength=\"40\"\r\n            className={` entry__input ${\r\n              currentFormValidator.errors.password\r\n                ? \"entry__input_type_error\"\r\n                : \"\"\r\n            }`}\r\n            type=\"password\"\r\n            value={currentFormValidator.values.password || \"\"}\r\n            onChange={currentFormValidator.handleChange}\r\n          />\r\n          <span className=\"entry__input-error entry-input-password-error\">\r\n            {currentFormValidator.errors.password}\r\n          </span>\r\n        </label>\r\n        <span\r\n          className={` entry__submit-message ${\r\n            messageWithResultSubmit ? \"entry__submit-message_active\" : \"\"\r\n          } \r\n          ${\r\n            messageWithResultSubmit.includes(\"ошибка\")\r\n              ? \"entry__submit-message_type_error\"\r\n              : \"\"\r\n          }\r\n          `}\r\n        >\r\n          {messageWithResultSubmit}\r\n        </span>\r\n        <button\r\n          aria-label=\"submit form\"\r\n          className={` entry__button-submit entry__button-submit_type_sign-in ${\r\n            !currentFormValidator.isValid\r\n              ? \"entry__button-submit_type_disabled\"\r\n              : \"\"\r\n          } `}\r\n          type=\"submit\"\r\n          // выключить кнопку, если отправляется запрос или введенные данные невалидны.\r\n          disabled={formSubmitSendingStatus || !currentFormValidator.isValid}\r\n        >\r\n          {formSubmitSendingStatus || \"Войти\"}\r\n        </button>\r\n        <p className=\"entry__text\">\r\n          Ещё не зарегистрированы?\r\n          <Link className=\"entry__link\" to=\"/sign-up\">\r\n            Регистрация\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport \"./Profile.css\";\r\nimport useFormValidator from \"../../hooks/useFormValidator\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\n\r\nexport default function Profile({\r\n  signOut,\r\n  onEditProfile,\r\n  formSubmitSendingStatus,\r\n  messageWithResultSubmit,\r\n}) {\r\n  const currentFormValidator = useFormValidator();\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  useEffect(() => {\r\n    if (currentUser.name) {\r\n      currentFormValidator.resetForm();\r\n      currentFormValidator.setValues({\r\n        ...currentFormValidator.values,\r\n        name: currentUser.name,\r\n        email: currentUser.email,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentUser]);\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    onEditProfile(\r\n      currentFormValidator.values.name,\r\n      currentFormValidator.values.email\r\n    );\r\n  }\r\n\r\n  function handleChangeInput(e) {\r\n    currentFormValidator.handleChange(e);\r\n    if (\r\n      // если введенные данные в поля формы равны данным текущего пользователя, выключить кнопку сабмита формы,\r\n      e.target.value === currentUser.name ||\r\n      e.target.value === currentUser.email\r\n    ) {\r\n      currentFormValidator.setIsValid(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"entry entry_type_profile\">\r\n        <h2 className=\"entry__title entry__title_type_profile\">\r\n          Привет, {currentUser.name}!\r\n        </h2>\r\n        <form className=\"entry__form\" onSubmit={handleSubmit}>\r\n          <label className=\"entry__field entry__field_type_profile\">\r\n            Имя\r\n            <input\r\n              // выключить поле, если отправляется запрос.\r\n              disabled={formSubmitSendingStatus}\r\n              id=\"entry-input-name\"\r\n              required\r\n              name=\"name\"\r\n              minLength=\"5\"\r\n              maxLength=\"40\"\r\n              pattern=\"[a-zA-Zа-яА-Я -]*\"\r\n              title=\"Имя должно содержать только латиницу, кириллицу, пробел или дефис\"\r\n              className={` entry__input entry__input_type_profile ${\r\n                currentFormValidator.errors.name\r\n                  ? \"entry__input_type_error\"\r\n                  : \"\"\r\n              }`}\r\n              type=\"text\"\r\n              value={currentFormValidator.values.name || \"\"}\r\n              onChange={handleChangeInput}\r\n            />\r\n            <span className=\"entry__input-error entry__input-error_type_profile entry-input-name-error\">\r\n              {currentFormValidator.errors.name}\r\n            </span>\r\n          </label>\r\n          <label className=\"entry__field entry__field_type_profile\">\r\n            E-mail\r\n            <input\r\n              // выключить поле, если отправляется запрос.\r\n              disabled={formSubmitSendingStatus}\r\n              id=\"entry-input-email\"\r\n              required\r\n              name=\"email\"\r\n              minLength=\"5\"\r\n              pattern=\"([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}\"\r\n              title=\"введен некорректный адрес электронной почты\"\r\n              className={` entry__input entry__input_type_profile ${\r\n                currentFormValidator.errors.email\r\n                  ? \"entry__input_type_error\"\r\n                  : \"\"\r\n              }`}\r\n              type=\"email\"\r\n              value={currentFormValidator.values.email || \"\"}\r\n              onChange={handleChangeInput}\r\n            />\r\n            <span className=\"entry__input-error entry__input-error_type_profile entry-input-email-error\">\r\n              {currentFormValidator.errors.email}\r\n            </span>\r\n          </label>\r\n          <span\r\n            className={` entry__submit-message ${\r\n              messageWithResultSubmit ? \"entry__submit-message_active\" : \"\"\r\n            } \r\n            ${\r\n              messageWithResultSubmit.includes(\"ошибка\")\r\n                ? \"entry__submit-message_type_error\"\r\n                : \"\"\r\n            }\r\n            `}\r\n          >\r\n            {messageWithResultSubmit}\r\n          </span>\r\n          <button\r\n            aria-label=\"submit form\"\r\n            className={` entry__button-submit entry__button-submit_type_profile ${\r\n              !currentFormValidator.isValid\r\n                ? \"entry__button-submit_type_profile-disabled\"\r\n                : \"\"\r\n            }`}\r\n            type=\"submit\"\r\n            // выключить кнопку, если отправляется запрос или введенные данные невалидны.\r\n            disabled={formSubmitSendingStatus || !currentFormValidator.isValid}\r\n          >\r\n            {formSubmitSendingStatus || \"Редактировать\"}\r\n          </button>\r\n        </form>\r\n        <button\r\n          // выключить кнопку, если отправляется запрос.\r\n          disabled={formSubmitSendingStatus}\r\n          aria-label=\"sign out page\"\r\n          className=\"entry__button-sign-out\"\r\n          onClick={signOut}\r\n        >\r\n          Выйти из аккаунта\r\n        </button>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./NotFound.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function NotFound() {\r\n  const navigate = useHistory();\r\n\r\n  return (\r\n    <section className=\"not-found\">\r\n      <h2 className=\"not-found__error\">404</h2>\r\n      <p className=\"not-found__message\">Страница не найдена</p>\r\n      <button\r\n        className=\"not-found__button-go-back\"\r\n        type=\"button\"\r\n        onClick={() => navigate.goBack()}\r\n      >\r\n        Назад\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Popup.css\";\r\n\r\nexport default function Popup({ isOpen, onClose, name, title = \"\", children }) {\r\n  function handleClickOverlay(e) {\r\n    if (e.target.classList.contains(\"popup\")) {\r\n      onClose();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={handleClickOverlay}\r\n      className={`popup popup_type_${name} ${isOpen ? \"visible-block\" : \"\"} `}\r\n    >\r\n      <div className={`popup__container popup__container_type_${name}`}>\r\n        <button\r\n          type=\"button\"\r\n          aria-label=\"close popup\"\r\n          className={`popup__close popup__close_type_${name}`}\r\n          onClick={onClose}\r\n        ></button>\r\n        <h3 className={`popup__title popup__title_type_${name}`}>{title}</h3>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Popup from \"../Popup/Popup\";\r\n\r\nexport default function ErrorMessagePopup({ errorMessage, onClose }) {\r\n  return (\r\n    <Popup\r\n      name=\"error-message\"\r\n      isOpen={errorMessage}\r\n      title={errorMessage}\r\n      onClose={onClose}\r\n    />\r\n  );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./app.css\";\r\nimport {\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n  useLocation,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\nimport { api } from \"../../utils/MoviesApi\";\r\nimport {\r\n  register,\r\n  login,\r\n  getCurrentUser,\r\n  editProfile,\r\n  getSavedMoviesCards,\r\n  saveMovieCard,\r\n  deleteMovieCard,\r\n} from \"../../utils/MainApi\";\r\nimport { DEFAULT_VALUES_API_DATA } from \"../../utils/constants\";\r\nimport {\r\n  calculateNumberMoviesCards,\r\n  getNumberCardsForAlignLastRow,\r\n  filterMoviesCards,\r\n  calculateNumberEnabledCheckboxes,\r\n  sortAlphabetically,\r\n  checkValidityUrl,\r\n} from \"../../utils/utils\";\r\nimport {\r\n  getAllSavedValuesFromLocalStorage,\r\n  removeItemsFromLocalStorage,\r\n  removeMoviesCheckboxes,\r\n  removeSavedMoviesCheckboxes,\r\n} from \"../../utils/localStorage\";\r\n// импорт сообщений ошибок.\r\nimport {\r\n  AUTHORIZATION_ERRORS,\r\n  MOVIE_CARD_ERRORS,\r\n} from \"../../utils/errorMessages\";\r\n// импорт информационных сообщений.\r\nimport {\r\n  AUTHORIZATION_MESSAGES,\r\n  AUTHORIZATION_STATUSES,\r\n  MOVIE_SEARCH_FORM_MESSAGES,\r\n} from \"../../utils/informationalMessages\";\r\n// импорт компонентов.\r\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\r\nimport Header from \"../Header/Header\";\r\nimport Main from \"../Main/Main\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Movies from \"../Movies/Movies\";\r\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\r\nimport Register from \"../Register/Register\";\r\nimport Login from \"../Login/Login\";\r\nimport Profile from \"../Profile/Profile\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport ErrorMessagePopup from \"../ErrorMessagePopup/ErrorMessagePopup\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nexport default function App() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  // общие стейты приложения.\r\n  // стейт для авторизации пользователя.\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  // стейт с данными текущего авторизованного пользователя.\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  // стейт использования основного стиля (цвета фона) компонента Header.\r\n  const [mainStyleHeader, setMainStyleHeader] = useState(true);\r\n  // стейт нахождения на странице /saved-movies.\r\n  const [locationSavedMovies, setLocationSavedMovies] = useState(false);\r\n  // стейт отображения компонента Header.\r\n  const [visibleHeader, setVisibleHeader] = useState(true);\r\n  // стейт отображения компонента Footer.\r\n  const [visibleFooter, setVisibleFooter] = useState(true);\r\n  // стейт отображения прелоадера в процессе авторизации пользователя.\r\n  const [visiblePreloaderLoggedIn, setVisiblePreloaderLoggedIn] =\r\n    useState(false);\r\n  // стейт отображения прелоадера в процессе загрузки фильмов.\r\n  const [visiblePreloaderMovies, setVisiblePreloaderMovies] = useState(false);\r\n  // стейт сообщения ошибки попапа для ошибок.\r\n  const [errorMessagePopupForError, setErrorMessagePopupForError] =\r\n    useState(\"\");\r\n  // стейт статуса лайка/дизлайка форм в формах фильмов.\r\n  const [statusLikeDislikeMovieCard, setStatusLikeDislikeMovieCard] =\r\n    useState(false);\r\n  // стейт статуса отправки форм авторизации.\r\n  const [statusSubmitAuthorizationForms, setStatusSubmitAuthorizationForms] =\r\n    useState(\"\");\r\n  // стейт с сообщением результата отправки форм авторизации.\r\n  const [\r\n    messageWithResultSubmitAuthorizationForms,\r\n    setMessageWithResultSubmitAuthorizationForms,\r\n  ] = useState(\"\");\r\n  // стейт пути URL для перехода после авторизации пользователя.\r\n  const [pathURL, setPathURL] = useState(\"\");\r\n\r\n  // стейты чекбосов страницы \"Фильмы\".\r\n  const [nameMoviesCheckbox, setNameMoviesCheckbox] = useState(false);\r\n  const [yearMoviesCheckbox, setYearMoviesCheckbox] = useState(false);\r\n  const [countryMoviesCheckbox, setCountryMoviesCheckbox] = useState(false);\r\n  const [directorMoviesCheckbox, setDirectorMoviesCheckbox] = useState(false);\r\n  const [descriptionMoviesCheckbox, setDescriptionMoviesCheckbox] =\r\n    useState(false);\r\n  const [shortMoviesCheckbox, setShortMoviesCheckbox] = useState(false);\r\n  const [alphabetMoviesCheckbox, setAlphabetMoviesCheckbox] = useState(false);\r\n  const [multiMoviesCheckbox, setMultiMoviesCheckbox] = useState(false);\r\n\r\n  // остальные стейты страницы \"Фильмы\".\r\n  // стейт выбора языка в названиях фильмов на странице \"Фильмы\"\r\n  const [langMoviesCards, setLangMoviesCards] = useState(\"RU\");\r\n  // стейт с ключевым словом поиска в форме фильмов.\r\n  const [searchValueMovies, setSearchValueMovies] = useState(\"\");\r\n  // стейт сообщения с результатами поиска в форме поиска фильмов.\r\n  const [messageWithResultSearchMovies, setMessageWithResultSearchMovies] =\r\n    useState(\"\");\r\n  // стейт всех карточек фильмов.\r\n  const [moviesCards, setMoviesCards] = useState([]);\r\n  // стейт отфильтрованных карточек фильмов.\r\n  const [filteredMoviesCards, setFilteredMoviesCards] = useState([]);\r\n  // стейт отфильтрованных карточек фильмов только по ключевому слову.\r\n  // стейт нужен для того, чтобы при отметке чекбоксов из группы \"Сортировка\",\r\n  // фильтрация проходила уже по отсортированным карточкам по ключевому слову, а не по всем имеющимся карточкам\r\n  const [\r\n    filteredMoviesCardsOnlyBySearcyValue,\r\n    setFilteredMoviesCardsOnlyBySearcyValue,\r\n  ] = useState([]);\r\n  // стейт отображаемых карточек фильмов.\r\n  const [displayedMoviesCards, setDisplayedMoviesCards] = useState([]);\r\n  // стейт с общим количеством карточек для отображения. Если добавляли карточки кнопкой \"Еще\".\r\n  const [totalNumberMoviesCards, setTotalNumberMoviesCards] = useState(0);\r\n\r\n  // стейты чекбосов страницы \"Сохраненные фильмы\".\r\n  const [nameSavedMoviesCheckbox, setNameSavedMoviesCheckbox] = useState(false);\r\n  const [yearSavedMoviesCheckbox, setYearSavedMoviesCheckbox] = useState(false);\r\n  const [countrySavedMoviesCheckbox, setCountrySavedMoviesCheckbox] =\r\n    useState(false);\r\n  const [directorSavedMoviesCheckbox, setDirectorSavedMoviesCheckbox] =\r\n    useState(false);\r\n  const [descriptionSavedMoviesCheckbox, setDescriptionSavedMoviesCheckbox] =\r\n    useState(false);\r\n  const [shortSavedMoviesCheckbox, setShortSavedMoviesCheckbox] =\r\n    useState(false);\r\n  const [alphabetSavedMoviesCheckbox, setAlphabetSavedMoviesCheckbox] =\r\n    useState(false);\r\n  const [multiSavedMoviesCheckbox, setMultiSavedMoviesCheckbox] =\r\n    useState(false);\r\n\r\n  // остальные стейты страницы \"Сохраненные фильмы\".\r\n  // стейт выбора языка в названиях фильмов на странице \"Сохраненные фильмы\"\r\n  const [langSavedMoviesCards, setLangSavedMoviesCards] = useState(\"RU\");\r\n  // стейт с ключевым словом поиска в форме сохраненных фильмов.\r\n  const [searchValueSavedMovies, setSearchValueSavedMovies] = useState(\"\");\r\n  // стейт сообщения с результатами поиска в форме поиска сохраненных фильмов.\r\n  const [\r\n    messageWithResultSearchSavedMovies,\r\n    setMessageWithResultSearchSavedMovies,\r\n  ] = useState(\"\");\r\n  // стейт всех карточек сохраненных фильмов.\r\n  const [savedMoviesCards, setSavedMoviesCards] = useState([]);\r\n  // стейт отфильтрованных карточек сохраненных фильмов.\r\n  const [filteredSavedMoviesCards, setFilteredSavedMoviesCards] = useState([]);\r\n  // стейт отфильтрованных карточек сохраненных фильмов только по ключевому слову.\r\n  const [\r\n    filteredSavedMoviesCardsOnlyBySearcyValue,\r\n    setFilteredSavedMoviesCardsOnlyBySearcyValue,\r\n  ] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      updateData();\r\n    } else {\r\n      const jwt = localStorage.getItem(\"jwt\");\r\n      if (jwt) {\r\n        handleDataLogin(jwt);\r\n      } else {\r\n        removeItemsFromLocalStorage();\r\n        resetStatesForRegisteredUser();\r\n      }\r\n    }\r\n  }, [loggedIn]);\r\n\r\n  useEffect(() => {\r\n    const route = location.pathname;\r\n    // если пользователь переходит на защищенный роут через адрес в URL,\r\n    // записываем его в стейт, чтобы после авторизации перейти на этот роут.\r\n    // т.к. ProtectedRoute будет редиректить до прохождении авторизации.\r\n    !loggedIn &&\r\n      (route === \"/saved-movies\" ||\r\n        route === \"/movies\" ||\r\n        route === \"/profile\") &&\r\n      setPathURL(route);\r\n    // на всех роутах, кроме этого, установить главный стиль(черный фон) для компонента Header.\r\n    if (route === \"/\") {\r\n      setMainStyleHeader(true);\r\n    } else {\r\n      setMainStyleHeader(false);\r\n    }\r\n    // при переходе на роут, установить соответствующий стейт локации.\r\n    if (route === \"/saved-movies\") {\r\n      setLocationSavedMovies(true);\r\n      // обновить результаты стейта фильтра с сохраненными карточками.\r\n      loggedIn && onSearchSavedMovies(searchValueSavedMovies);\r\n    } else {\r\n      setLocationSavedMovies(false);\r\n    }\r\n    if (\r\n      //  при переходе на данные роуты, отобразить компоненты Header и Footer, иначе скрыть.\r\n      route === \"/\" ||\r\n      route === \"/movies\" ||\r\n      route === \"/saved-movies\"\r\n    ) {\r\n      setVisibleHeader(true);\r\n      setVisibleFooter(true);\r\n    } else {\r\n      setVisibleHeader(false);\r\n      setVisibleFooter(false);\r\n    }\r\n    if (route === \"/profile\") {\r\n      setVisibleHeader(true);\r\n    }\r\n    // сбросить стейт с сообщением результата отправки форм авторизации.\r\n    messageWithResultSubmitAuthorizationForms &&\r\n      setMessageWithResultSubmitAuthorizationForms(\"\");\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      calculateNumberEnabledCheckboxes([\r\n        nameMoviesCheckbox,\r\n        yearMoviesCheckbox,\r\n        countryMoviesCheckbox,\r\n        directorMoviesCheckbox,\r\n        descriptionMoviesCheckbox,\r\n      ]) > 0\r\n        ? searchValueMovies && onSearchMovies(searchValueMovies)\r\n        : // т.к. setNameMoviesCheckbox(true) вернет undefined,\r\n          // для выполнения следующей за ним операции, используется оператор ||.\r\n          setNameMoviesCheckbox(true) ||\r\n          localStorage.setItem(\"nameMoviesCheckbox\", true);\r\n    }\r\n  }, [\r\n    nameMoviesCheckbox,\r\n    yearMoviesCheckbox,\r\n    countryMoviesCheckbox,\r\n    directorMoviesCheckbox,\r\n    descriptionMoviesCheckbox,\r\n    loggedIn,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    loggedIn &&\r\n      localStorage.setItem(\"shortMoviesCheckbox\", shortMoviesCheckbox);\r\n    if (shortMoviesCheckbox && filteredMoviesCards.length) {\r\n      const { resultFiltered } = filterMoviesCards({\r\n        cards: filteredMoviesCards,\r\n        checkboxes: {\r\n          short: shortMoviesCheckbox,\r\n          alphabet: alphabetMoviesCheckbox,\r\n        },\r\n      });\r\n      setFilteredMoviesCards(resultFiltered);\r\n    } else {\r\n      // если в отфильтрованных только по слову ничего нет, тогда не обновляем стейт отфильтрованных карточек.\r\n      filteredMoviesCardsOnlyBySearcyValue.length &&\r\n        setFilteredMoviesCards(\r\n          alphabetMoviesCheckbox\r\n            ? [\r\n                ...sortAlphabetically(\r\n                  filteredMoviesCardsOnlyBySearcyValue,\r\n                  langMoviesCards\r\n                ),\r\n              ]\r\n            : filteredMoviesCardsOnlyBySearcyValue\r\n        );\r\n    }\r\n  }, [shortMoviesCheckbox]);\r\n\r\n  useEffect(() => {\r\n    const numberCards = calculateNumberMoviesCards();\r\n    setDisplayedMoviesCards(\r\n      filteredMoviesCards.slice(0, totalNumberMoviesCards || numberCards)\r\n    );\r\n    loggedIn &&\r\n      localStorage.setItem(\r\n        \"totalNumberMoviesCards\",\r\n        totalNumberMoviesCards || numberCards\r\n      );\r\n    totalNumberMoviesCards && setTotalNumberMoviesCards(0);\r\n    // если отфильтрованных карточек нет и есть слово в форме поиска.\r\n    if (!filteredMoviesCards.length && searchValueMovies) {\r\n      setMessageWithResultSearchMovies(\r\n        MOVIE_SEARCH_FORM_MESSAGES.nothingWasFound\r\n      );\r\n      // иначе, если отфильтрованные сохраненные карточки есть.\r\n    } else {\r\n      setMessageWithResultSearchMovies(\"\");\r\n    }\r\n  }, [filteredMoviesCards]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      calculateNumberEnabledCheckboxes([\r\n        nameSavedMoviesCheckbox,\r\n        yearSavedMoviesCheckbox,\r\n        countrySavedMoviesCheckbox,\r\n        directorSavedMoviesCheckbox,\r\n        descriptionSavedMoviesCheckbox,\r\n      ]) > 0\r\n        ? searchValueSavedMovies && onSearchSavedMovies(searchValueSavedMovies)\r\n        : // т.к. setNameSavedMoviesCheckbox(true) вернет undefined, для выполнения следующей за ним операции, использутеся оператор ||.\r\n          setNameSavedMoviesCheckbox(true) ||\r\n          localStorage.setItem(\"nameSavedMoviesCheckbox\", true);\r\n    }\r\n  }, [\r\n    nameSavedMoviesCheckbox,\r\n    yearSavedMoviesCheckbox,\r\n    countrySavedMoviesCheckbox,\r\n    directorSavedMoviesCheckbox,\r\n    descriptionSavedMoviesCheckbox,\r\n    loggedIn,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    const checkboxes = {\r\n      short: shortSavedMoviesCheckbox,\r\n      alphabet: alphabetSavedMoviesCheckbox,\r\n      lang: langSavedMoviesCards,\r\n    };\r\n    loggedIn &&\r\n      localStorage.setItem(\r\n        \"shortSavedMoviesCheckbox\",\r\n        shortSavedMoviesCheckbox\r\n      );\r\n    if (shortSavedMoviesCheckbox && filteredSavedMoviesCards.length) {\r\n      const { resultFiltered } = filterMoviesCards({\r\n        cards: filteredSavedMoviesCards,\r\n        checkboxes,\r\n      });\r\n\r\n      setFilteredSavedMoviesCards(resultFiltered);\r\n    } else {\r\n      setFilteredSavedMoviesCards(\r\n        alphabetSavedMoviesCheckbox\r\n          ? [\r\n              ...sortAlphabetically(\r\n                filteredSavedMoviesCardsOnlyBySearcyValue,\r\n                langSavedMoviesCards\r\n              ),\r\n            ]\r\n          : filteredSavedMoviesCardsOnlyBySearcyValue\r\n      );\r\n    }\r\n    if (\r\n      shortSavedMoviesCheckbox &&\r\n      savedMoviesCards.length &&\r\n      !searchValueSavedMovies &&\r\n      !filteredSavedMoviesCards.length\r\n    ) {\r\n      const { resultFiltered } = filterMoviesCards({\r\n        cards: savedMoviesCards,\r\n        checkboxes,\r\n      });\r\n      setFilteredSavedMoviesCards(resultFiltered);\r\n      setFilteredSavedMoviesCardsOnlyBySearcyValue(\r\n        alphabetSavedMoviesCheckbox\r\n          ? [...sortAlphabetically(savedMoviesCards, langSavedMoviesCards)]\r\n          : savedMoviesCards\r\n      );\r\n    }\r\n  }, [shortSavedMoviesCheckbox]);\r\n\r\n  useEffect(() => {\r\n    // если отфильтрованных сохраненных карточек нет и есть слово в форме поиска.\r\n    if (!filteredSavedMoviesCards.length && searchValueSavedMovies) {\r\n      setMessageWithResultSearchSavedMovies(\r\n        MOVIE_SEARCH_FORM_MESSAGES.nothingWasFound\r\n      );\r\n      // иначе, если отфильтрованные сохраненные карточки есть.\r\n    } else if (filteredSavedMoviesCards.length) {\r\n      setMessageWithResultSearchSavedMovies(\"\");\r\n      // иначе, если нет отфильтрованных сохраненных карточек и отмечен чекбокс сохраненных фильмов и есть сохраненные карточки.\r\n    } else if (\r\n      !filteredSavedMoviesCards.length &&\r\n      shortSavedMoviesCheckbox &&\r\n      savedMoviesCards.length\r\n    ) {\r\n      setMessageWithResultSearchSavedMovies(\r\n        MOVIE_SEARCH_FORM_MESSAGES.noSavedShortMovies\r\n      );\r\n      // сделано, чтобы была возможность фильтровать карточки нажатием на чекбокс до поиска.\r\n      // т.к. при первом переходе на страницу, сразу отображаются все сохраненные карточки.\r\n    } else {\r\n      setMessageWithResultSearchSavedMovies(\r\n        MOVIE_SEARCH_FORM_MESSAGES.noSavedMovies\r\n      );\r\n    }\r\n  }, [filteredSavedMoviesCards]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      alphabetMoviesCheckbox\r\n        ? setFilteredMoviesCards([\r\n            ...sortAlphabetically(filteredMoviesCards, langMoviesCards),\r\n          ])\r\n        : onSearchMovies(searchValueMovies);\r\n    }\r\n  }, [alphabetMoviesCheckbox]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      alphabetSavedMoviesCheckbox\r\n        ? setFilteredSavedMoviesCards([\r\n            ...sortAlphabetically(\r\n              filteredSavedMoviesCards,\r\n              langSavedMoviesCards\r\n            ),\r\n          ])\r\n        : onSearchSavedMovies(searchValueSavedMovies);\r\n    }\r\n  }, [alphabetSavedMoviesCheckbox]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      localStorage.setItem(\"langMoviesCards\", langMoviesCards);\r\n      searchValueMovies && onSearchMovies(searchValueMovies);\r\n    }\r\n  }, [langMoviesCards]);\r\n\r\n  useEffect(() => {\r\n    if (loggedIn) {\r\n      localStorage.setItem(\"langSavedMoviesCards\", langSavedMoviesCards);\r\n      searchValueSavedMovies && onSearchSavedMovies(searchValueSavedMovies);\r\n    }\r\n  }, [langSavedMoviesCards]);\r\n\r\n  // обработчик закрытия модального окна с ошибкой.\r\n  function handleCloseErrorMessagePopup() {\r\n    setErrorMessagePopupForError(\"\");\r\n  }\r\n\r\n  // обработчик регистрации.\r\n  function onRegister(name, email, password) {\r\n    setStatusSubmitAuthorizationForms(AUTHORIZATION_STATUSES.registerNewUser);\r\n    setMessageWithResultSubmitAuthorizationForms(\"\");\r\n    register(name, email, password)\r\n      .then(() => {\r\n        setMessageWithResultSubmitAuthorizationForms(\r\n          AUTHORIZATION_MESSAGES.successfulRegistration\r\n        );\r\n        onLogin(email, password);\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(`${err}`);\r\n        setMessageWithResultSubmitAuthorizationForms(\r\n          AUTHORIZATION_ERRORS.registration\r\n        );\r\n      })\r\n      .finally(() => setStatusSubmitAuthorizationForms(\"\"));\r\n  }\r\n\r\n  // обработчик авторизации.\r\n  function onLogin(email, password) {\r\n    setStatusSubmitAuthorizationForms(AUTHORIZATION_STATUSES.authorizationUser);\r\n    setMessageWithResultSubmitAuthorizationForms(\"\");\r\n    login(email, password)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setMessageWithResultSubmitAuthorizationForms(\r\n            AUTHORIZATION_MESSAGES.successfulAuthorization\r\n          );\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          handleDataLogin(data.token);\r\n          setPathURL(\"/movies\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(`${err}`);\r\n        setMessageWithResultSubmitAuthorizationForms(\r\n          AUTHORIZATION_ERRORS.authorization\r\n        );\r\n      })\r\n      .finally(() => setStatusSubmitAuthorizationForms(\"\"));\r\n  }\r\n\r\n  // обработчик редактирования профиля.\r\n  function onEditProfile(name, email) {\r\n    setStatusSubmitAuthorizationForms(\r\n      AUTHORIZATION_STATUSES.updatingProfileData\r\n    );\r\n    setMessageWithResultSubmitAuthorizationForms(\"\");\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    editProfile(name, email, jwt)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        setMessageWithResultSubmitAuthorizationForms(\r\n          AUTHORIZATION_MESSAGES.successfulProfileUpdate\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(`${err}`);\r\n        setMessageWithResultSubmitAuthorizationForms(\r\n          AUTHORIZATION_ERRORS.profileChanges\r\n        );\r\n      })\r\n      .finally(() => setStatusSubmitAuthorizationForms(\"\"));\r\n  }\r\n\r\n  // обработчик выхода из аккаунта.\r\n  function onSignOut() {\r\n    localStorage.removeItem(\"jwt\");\r\n    setLoggedIn(false);\r\n  }\r\n\r\n  // обработчик данных для авторизации.\r\n  async function handleDataLogin(jwt) {\r\n    setVisiblePreloaderLoggedIn(true);\r\n    const currentUser = await checkValidityToken(jwt);\r\n    if (currentUser) {\r\n      setCurrentUser(currentUser);\r\n      const savedMoviesCards = await getSavedMoviesCardsFromAPI(jwt);\r\n      if (savedMoviesCards) {\r\n        setSavedMoviesCards(savedMoviesCards);\r\n        const {\r\n          moviesCards,\r\n          searchValueMovies,\r\n          searchValueSavedMovies,\r\n          moviesCheckboxes,\r\n          savedMoviesCheckboxes,\r\n          totalNumberMoviesCards,\r\n        } = getAllSavedValuesFromLocalStorage();\r\n        moviesCards && setMoviesCards(moviesCards);\r\n        searchValueMovies && setSearchValueMovies(searchValueMovies);\r\n        searchValueSavedMovies &&\r\n          setSearchValueSavedMovies(searchValueSavedMovies);\r\n        setNameMoviesCheckbox(moviesCheckboxes.name);\r\n        setYearMoviesCheckbox(moviesCheckboxes.year);\r\n        setCountryMoviesCheckbox(moviesCheckboxes.country);\r\n        setDirectorMoviesCheckbox(moviesCheckboxes.director);\r\n        setDescriptionMoviesCheckbox(moviesCheckboxes.description);\r\n        setShortMoviesCheckbox(moviesCheckboxes.short);\r\n        setAlphabetMoviesCheckbox(moviesCheckboxes.alphabet);\r\n        setMultiMoviesCheckbox(moviesCheckboxes.multi);\r\n        moviesCheckboxes.lang && setLangMoviesCards(moviesCheckboxes.lang);\r\n        setNameSavedMoviesCheckbox(savedMoviesCheckboxes.name);\r\n        setYearSavedMoviesCheckbox(savedMoviesCheckboxes.year);\r\n        setCountrySavedMoviesCheckbox(savedMoviesCheckboxes.country);\r\n        setDirectorSavedMoviesCheckbox(savedMoviesCheckboxes.director);\r\n        setDescriptionSavedMoviesCheckbox(savedMoviesCheckboxes.description);\r\n        setShortSavedMoviesCheckbox(savedMoviesCheckboxes.short);\r\n        setAlphabetSavedMoviesCheckbox(savedMoviesCheckboxes.alphabet);\r\n        setMultiSavedMoviesCheckbox(savedMoviesCheckboxes.multi);\r\n        savedMoviesCheckboxes.lang &&\r\n          setLangSavedMoviesCards(savedMoviesCheckboxes.lang);\r\n        totalNumberMoviesCards &&\r\n          setTotalNumberMoviesCards(totalNumberMoviesCards);\r\n        setLoggedIn(true);\r\n      }\r\n    }\r\n    setVisiblePreloaderLoggedIn(false);\r\n  }\r\n\r\n  // проверить валидност. токена.\r\n  function checkValidityToken(jwt) {\r\n    return getCurrentUser(jwt)\r\n      .then((res) => {\r\n        if (res) {\r\n          return res;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(\r\n          `${AUTHORIZATION_ERRORS.tokenValidation} ${err}`\r\n        );\r\n        removeItemsFromLocalStorage();\r\n        resetStatesForRegisteredUser();\r\n      });\r\n  }\r\n\r\n  // получить карточки сохраненных фильмов из API.\r\n  function getSavedMoviesCardsFromAPI(jwt) {\r\n    return getSavedMoviesCards(jwt)\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(\r\n          `${MOVIE_CARD_ERRORS.getSavedMovies} ${err}`\r\n        );\r\n      });\r\n  }\r\n\r\n  // сбросить все стейты приложения.\r\n  function resetStatesForRegisteredUser() {\r\n    setCurrentUser({});\r\n    setSearchValueMovies(\"\");\r\n    setSearchValueSavedMovies(\"\");\r\n    setMessageWithResultSearchMovies(\"\");\r\n    setMessageWithResultSearchSavedMovies(\"\");\r\n    setMoviesCards([]);\r\n    setSavedMoviesCards([]);\r\n    setFilteredMoviesCards([]);\r\n    setFilteredSavedMoviesCards([]);\r\n    setFilteredMoviesCardsOnlyBySearcyValue([]);\r\n    setFilteredSavedMoviesCardsOnlyBySearcyValue([]);\r\n  }\r\n\r\n  // обновить данные приложения.\r\n  function updateData() {\r\n    searchValueMovies && onSearchMovies(searchValueMovies);\r\n    (searchValueSavedMovies || savedMoviesCards.length) &&\r\n      onSearchSavedMovies(searchValueSavedMovies);\r\n    pathURL && history.push(pathURL);\r\n    setPathURL(\"\");\r\n  }\r\n\r\n  // обработчик чекбокса короткометражных фильмов.\r\n  function handleShortMoviesCheckbox() {\r\n    locationSavedMovies\r\n      ? setShortSavedMoviesCheckbox(!shortSavedMoviesCheckbox)\r\n      : setShortMoviesCheckbox(!shortMoviesCheckbox);\r\n  }\r\n\r\n  // найти фильмы.\r\n  async function onSearchMovies(searchValue) {\r\n    setVisiblePreloaderMovies(true);\r\n    setSearchValueMovies(searchValue);\r\n    localStorage.setItem(\"searchValueMovies\", searchValue);\r\n    setMessageWithResultSearchMovies(\"\");\r\n    const checkboxes = {\r\n      name: nameMoviesCheckbox,\r\n      year: yearMoviesCheckbox,\r\n      country: countryMoviesCheckbox,\r\n      director: directorMoviesCheckbox,\r\n      description: descriptionMoviesCheckbox,\r\n      short: shortMoviesCheckbox,\r\n      alphabet: alphabetMoviesCheckbox,\r\n      lang: langMoviesCards,\r\n    };\r\n    if (!moviesCards.length) {\r\n      const moviesCards = await getMoviesCardsFromAPI();\r\n      if (moviesCards) {\r\n        localStorage.setItem(\"moviesCards\", JSON.stringify(moviesCards));\r\n        setMoviesCards(moviesCards);\r\n        handleFilterMoviesCards({\r\n          cards: moviesCards,\r\n          search: searchValue,\r\n          checkboxes,\r\n        });\r\n      }\r\n    } else {\r\n      handleFilterMoviesCards({\r\n        cards: moviesCards,\r\n        search: searchValue,\r\n        checkboxes,\r\n      });\r\n    }\r\n  }\r\n\r\n  // найти сохраненные фильмы\r\n  function onSearchSavedMovies(searchValue) {\r\n    setVisiblePreloaderMovies(true);\r\n    setSearchValueSavedMovies(searchValue);\r\n    searchValue && localStorage.setItem(\"searchValueSavedMovies\", searchValue);\r\n    setMessageWithResultSearchSavedMovies(\"\");\r\n    const { resultFiltered, resultFilteredOnlyBySearcyValue } =\r\n      filterMoviesCards({\r\n        cards: savedMoviesCards,\r\n        search: searchValue,\r\n        checkboxes: {\r\n          name: nameSavedMoviesCheckbox,\r\n          year: yearSavedMoviesCheckbox,\r\n          country: countrySavedMoviesCheckbox,\r\n          director: directorSavedMoviesCheckbox,\r\n          description: descriptionSavedMoviesCheckbox,\r\n          short: shortSavedMoviesCheckbox,\r\n          alphabet: alphabetSavedMoviesCheckbox,\r\n          lang: langSavedMoviesCards,\r\n        },\r\n      });\r\n    setFilteredSavedMoviesCards(resultFiltered);\r\n    setFilteredSavedMoviesCardsOnlyBySearcyValue(\r\n      searchValue\r\n        ? resultFilteredOnlyBySearcyValue\r\n        : [...sortAlphabetically(savedMoviesCards)]\r\n    );\r\n    setVisiblePreloaderMovies(false);\r\n  }\r\n\r\n  // получить карточки фильмов из API.\r\n  function getMoviesCardsFromAPI() {\r\n    return api\r\n      .getMovieCards()\r\n      .then((data) => {\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(`${err}`);\r\n        setVisiblePreloaderMovies(false);\r\n        setMessageWithResultSearchMovies(MOVIE_CARD_ERRORS.getMovies);\r\n      });\r\n  }\r\n\r\n  function handleFilterMoviesCards({ cards, search, checkboxes }) {\r\n    const { resultFiltered, resultFilteredOnlyBySearcyValue } =\r\n      filterMoviesCards({\r\n        cards,\r\n        search,\r\n        checkboxes,\r\n      });\r\n    setFilteredMoviesCards(resultFiltered);\r\n    setFilteredMoviesCardsOnlyBySearcyValue(resultFilteredOnlyBySearcyValue);\r\n    setVisiblePreloaderMovies(false);\r\n  }\r\n\r\n  // обработчик лайков карточек.\r\n  function handleCardLike(card) {\r\n    setStatusLikeDislikeMovieCard(true);\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    const cardWithRequiredFields = {\r\n      country: card.country || DEFAULT_VALUES_API_DATA.string,\r\n      director: card.director || DEFAULT_VALUES_API_DATA.string,\r\n      duration: card.duration || DEFAULT_VALUES_API_DATA.number,\r\n      year: card.year || DEFAULT_VALUES_API_DATA.string,\r\n      description: card.description || DEFAULT_VALUES_API_DATA.string,\r\n      image: card.image.url\r\n        ? `https://api.nomoreparties.co${card.image.url}`\r\n        : DEFAULT_VALUES_API_DATA.URLForImage,\r\n      trailer: checkValidityUrl(card.trailerLink)\r\n        ? card.trailerLink\r\n        : DEFAULT_VALUES_API_DATA.URLForVideo,\r\n      nameRU: card.nameRU || DEFAULT_VALUES_API_DATA.string,\r\n      nameEN: card.nameEN || DEFAULT_VALUES_API_DATA.string,\r\n      thumbnail: card.image.formats.thumbnail.url\r\n        ? `https://api.nomoreparties.co${card.image.formats.thumbnail.url}`\r\n        : DEFAULT_VALUES_API_DATA.URLForImage,\r\n      // у каждой карточки должен быть уникальный id.\r\n      // не возможно задать дефолтный id, иначе будет две карточки с одинаковым id.\r\n      movieId: card.id,\r\n    };\r\n    saveMovieCard(jwt, cardWithRequiredFields)\r\n      .then((card) => {\r\n        setSavedMoviesCards([...savedMoviesCards, card]);\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(`${MOVIE_CARD_ERRORS.likeMovies} ${err}`);\r\n      })\r\n      .finally(() => setStatusLikeDislikeMovieCard(false));\r\n  }\r\n\r\n  // обработчик удаления или дизлайков карточек.\r\n  function handleCardDelete(card) {\r\n    setStatusLikeDislikeMovieCard(true);\r\n    const jwt = localStorage.getItem(\"jwt\");\r\n    const cardId =\r\n      card._id || savedMoviesCards.find((i) => i.movieId === card.id)._id;\r\n    deleteMovieCard(jwt, cardId)\r\n      .then(() => {\r\n        setSavedMoviesCards((state) =>\r\n          state.filter((c) => c.movieId !== (card.movieId || card.id))\r\n        );\r\n        setFilteredSavedMoviesCards((state) =>\r\n          state.filter((c) => c.movieId !== (card.movieId || card.id))\r\n        );\r\n\r\n        setFilteredSavedMoviesCardsOnlyBySearcyValue((state) =>\r\n          state.filter((c) => c.movieId !== (card.movieId || card.id))\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        setErrorMessagePopupForError(\r\n          `${MOVIE_CARD_ERRORS.deleteMovies} ${err}`\r\n        );\r\n      })\r\n      .finally(() => setStatusLikeDislikeMovieCard(false));\r\n  }\r\n\r\n  // обработчик добавления карточек для отображения.\r\n  function handleAddMoreCards() {\r\n    const currentNumberCards = displayedMoviesCards.length;\r\n    const numberCardsInRow = calculateNumberMoviesCards({\r\n      onButtonAddMoreCards: true,\r\n    });\r\n    let totalNumberCards =\r\n      numberCardsInRow === 1\r\n        ? currentNumberCards + 2\r\n        : getNumberCardsForAlignLastRow(numberCardsInRow, currentNumberCards);\r\n    while (totalNumberCards > filteredMoviesCards.length) --totalNumberCards;\r\n    localStorage.setItem(\"totalNumberMoviesCards\", totalNumberCards);\r\n    setDisplayedMoviesCards(filteredMoviesCards.slice(0, totalNumberCards));\r\n  }\r\n\r\n  function handleMoviesCheckboxes(checkbox) {\r\n    if (!multiMoviesCheckbox) {\r\n      resetAllStatesMoviesCheckboxes();\r\n      checkbox.setState(true);\r\n    } else {\r\n      checkbox.setState(!checkbox.state);\r\n    }\r\n    localStorage.setItem(\r\n      checkbox.nameState,\r\n      !multiMoviesCheckbox ? true : !checkbox.state\r\n    );\r\n  }\r\n\r\n  function handleSavedMoviesCheckboxes(checkbox) {\r\n    if (!multiSavedMoviesCheckbox) {\r\n      resetAllStatesSavedMoviesCheckboxes();\r\n      checkbox.setState(true);\r\n    } else {\r\n      checkbox.setState(!checkbox.state);\r\n    }\r\n    localStorage.setItem(\r\n      checkbox.nameState,\r\n      !multiSavedMoviesCheckbox ? true : !checkbox.state\r\n    );\r\n  }\r\n\r\n  function resetAllStatesMoviesCheckboxes() {\r\n    localStorage.setItem(\"nameMoviesCheckbox\", false);\r\n    localStorage.setItem(\"yearMoviesCheckbox\", false);\r\n    localStorage.setItem(\"countryMoviesCheckbox\", false);\r\n    localStorage.setItem(\"directorMoviesCheckbox\", false);\r\n    localStorage.setItem(\"descriptionMoviesCheckbox\", false);\r\n    setNameMoviesCheckbox(false);\r\n    setYearMoviesCheckbox(false);\r\n    setCountryMoviesCheckbox(false);\r\n    setDirectorMoviesCheckbox(false);\r\n    setDescriptionMoviesCheckbox(false);\r\n  }\r\n\r\n  function resetAllStatesSavedMoviesCheckboxes() {\r\n    localStorage.setItem(\"nameSavedMoviesCheckbox\", false);\r\n    localStorage.setItem(\"yearSavedMoviesCheckbox\", false);\r\n    localStorage.setItem(\"countrySavedMoviesCheckbox\", false);\r\n    localStorage.setItem(\"directorSavedMoviesCheckbox\", false);\r\n    localStorage.setItem(\"descriptionSavedMoviesCheckbox\", false);\r\n    setNameSavedMoviesCheckbox(false);\r\n    setYearSavedMoviesCheckbox(false);\r\n    setCountrySavedMoviesCheckbox(false);\r\n    setDirectorSavedMoviesCheckbox(false);\r\n    setDescriptionSavedMoviesCheckbox(false);\r\n  }\r\n\r\n  function handleResetMovies() {\r\n    localStorage.removeItem(\"searchValueMovies\");\r\n    removeMoviesCheckboxes();\r\n    window.location.reload();\r\n  }\r\n\r\n  function handleResetSavedMovies() {\r\n    localStorage.removeItem(\"searchValueSavedMovies\");\r\n    removeSavedMoviesCheckboxes();\r\n    window.location.reload();\r\n  }\r\n\r\n  function handleAlphabetMoviesCheckbox() {\r\n    localStorage.setItem(\"alphabetMoviesCheckbox\", !alphabetMoviesCheckbox);\r\n    setAlphabetMoviesCheckbox(!alphabetMoviesCheckbox);\r\n  }\r\n\r\n  function handleAlphabetSavedMoviesCheckbox() {\r\n    localStorage.setItem(\r\n      \"alphabetSavedMoviesCheckbox\",\r\n      !alphabetSavedMoviesCheckbox\r\n    );\r\n    setAlphabetSavedMoviesCheckbox(!alphabetSavedMoviesCheckbox);\r\n  }\r\n\r\n  function handleMultiMoviesCheckbox() {\r\n    localStorage.setItem(\"multiMoviesCheckbox\", !multiMoviesCheckbox);\r\n    setMultiMoviesCheckbox(!multiMoviesCheckbox);\r\n    multiMoviesCheckbox &&\r\n      calculateNumberEnabledCheckboxes([\r\n        nameMoviesCheckbox,\r\n        yearMoviesCheckbox,\r\n        countryMoviesCheckbox,\r\n        directorMoviesCheckbox,\r\n        descriptionMoviesCheckbox,\r\n      ]) > 1 &&\r\n      resetAllStatesMoviesCheckboxes();\r\n  }\r\n\r\n  function handleMultiSavedMoviesCheckbox() {\r\n    localStorage.setItem(\"multiSavedMoviesCheckbox\", !multiSavedMoviesCheckbox);\r\n    setMultiSavedMoviesCheckbox(!multiSavedMoviesCheckbox);\r\n    multiSavedMoviesCheckbox &&\r\n      calculateNumberEnabledCheckboxes([\r\n        nameSavedMoviesCheckbox,\r\n        yearSavedMoviesCheckbox,\r\n        countrySavedMoviesCheckbox,\r\n        directorSavedMoviesCheckbox,\r\n        descriptionSavedMoviesCheckbox,\r\n      ]) > 1 &&\r\n      resetAllStatesSavedMoviesCheckboxes();\r\n  }\r\n\r\n  function handleLangMovies() {\r\n    langMoviesCards === \"RU\"\r\n      ? setLangMoviesCards(\"EN\")\r\n      : setLangMoviesCards(\"RU\");\r\n  }\r\n\r\n  function handleLangSavedMovies() {\r\n    langSavedMoviesCards === \"RU\"\r\n      ? setLangSavedMoviesCards(\"EN\")\r\n      : setLangSavedMoviesCards(\"RU\");\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"page page_align_center\">\r\n        {!visiblePreloaderLoggedIn && (\r\n          <Header\r\n            mainStyleHeader={mainStyleHeader}\r\n            loggedIn={loggedIn}\r\n            visibleHeader={visibleHeader}\r\n          />\r\n        )}\r\n        <main className=\"content\">\r\n          {visiblePreloaderLoggedIn ? (\r\n            <Preloader type=\"logged-in\" />\r\n          ) : (\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Main />\r\n              </Route>\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/profile\"\r\n                component={Profile}\r\n                signOut={onSignOut}\r\n                onEditProfile={onEditProfile}\r\n                loggedIn={loggedIn}\r\n                formSubmitSendingStatus={statusSubmitAuthorizationForms}\r\n                messageWithResultSubmit={\r\n                  messageWithResultSubmitAuthorizationForms\r\n                }\r\n              />\r\n              <Route exact path=\"/sign-in\">\r\n                {/* если пользователь авторизовался, запрещаем переход на страницу авторизации по URL-адресу данного роута.*/}\r\n                {localStorage.getItem(\"jwt\") ? (\r\n                  <Redirect to=\"/\" />\r\n                ) : (\r\n                  <Login\r\n                    onLogin={onLogin}\r\n                    formSubmitSendingStatus={statusSubmitAuthorizationForms}\r\n                    messageWithResultSubmit={\r\n                      messageWithResultSubmitAuthorizationForms\r\n                    }\r\n                  />\r\n                )}\r\n              </Route>\r\n              <Route exact path=\"/sign-up\">\r\n                {/* если пользователь авторизовался, запрещаем переход на страницу авторизации по URL-адресу данного роута.*/}\r\n                {localStorage.getItem(\"jwt\") ? (\r\n                  <Redirect to=\"/\" />\r\n                ) : (\r\n                  <Register\r\n                    onRegister={onRegister}\r\n                    formSubmitSendingStatus={statusSubmitAuthorizationForms}\r\n                    messageWithResultSubmit={\r\n                      messageWithResultSubmitAuthorizationForms\r\n                    }\r\n                  />\r\n                )}\r\n              </Route>\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/movies\"\r\n                component={Movies}\r\n                moviesSearchValueCheckboxes={[\r\n                  {\r\n                    title: \"Название\",\r\n                    nameState: \"nameMoviesCheckbox\",\r\n                    state: nameMoviesCheckbox,\r\n                    setState: setNameMoviesCheckbox,\r\n                    handler: handleMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Год\",\r\n                    nameState: \"yearMoviesCheckbox\",\r\n                    state: yearMoviesCheckbox,\r\n                    setState: setYearMoviesCheckbox,\r\n                    handler: handleMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Страна\",\r\n                    nameState: \"countryMoviesCheckbox\",\r\n                    state: countryMoviesCheckbox,\r\n                    setState: setCountryMoviesCheckbox,\r\n                    handler: handleMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Режиссер\",\r\n                    nameState: \"directorMoviesCheckbox\",\r\n                    state: directorMoviesCheckbox,\r\n                    setState: setDirectorMoviesCheckbox,\r\n                    handler: handleMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Описание\",\r\n                    nameState: \"descriptionMoviesCheckbox\",\r\n                    state: descriptionMoviesCheckbox,\r\n                    setState: setDescriptionMoviesCheckbox,\r\n                    handler: handleMoviesCheckboxes,\r\n                  },\r\n                ]}\r\n                moviesSortingCheckboxes={[\r\n                  {\r\n                    title: \"Короткометражки\",\r\n                    state: shortMoviesCheckbox,\r\n                    handler: handleShortMoviesCheckbox,\r\n                  },\r\n                  {\r\n                    title: \"Алфавит\",\r\n                    state: alphabetMoviesCheckbox,\r\n                    handler: handleAlphabetMoviesCheckbox,\r\n                  },\r\n                ]}\r\n                moviesSettingsButtons={[\r\n                  {\r\n                    title: \"Мульти\",\r\n                    state: multiMoviesCheckbox,\r\n                    handler: handleMultiMoviesCheckbox,\r\n                    type: \"checkbox,\",\r\n                    className: \"multi\",\r\n                  },\r\n                  {\r\n                    title: langMoviesCards,\r\n                    handler: handleLangMovies,\r\n                    type: \"button\",\r\n                    className: \"lang\",\r\n                  },\r\n                  {\r\n                    title: \"Сбросить\",\r\n                    handler: handleResetMovies,\r\n                    type: \"button\",\r\n                    className: \"reset\",\r\n                  },\r\n                ]}\r\n                moviesCardTitle={langMoviesCards}\r\n                loggedIn={loggedIn}\r\n                visiblePreloader={visiblePreloaderMovies}\r\n                filteredMoviesCards={filteredMoviesCards}\r\n                moviesCards={displayedMoviesCards}\r\n                onSearchMovies={onSearchMovies}\r\n                searchMessageMovies={messageWithResultSearchMovies}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}\r\n                onAddMoreCard={handleAddMoreCards}\r\n                savedMoviesCards={savedMoviesCards}\r\n                previousValueSearchForm={searchValueMovies}\r\n                statusLikeDislikeMovieCard={statusLikeDislikeMovieCard}\r\n              />\r\n              <ProtectedRoute\r\n                exact\r\n                path=\"/saved-movies\"\r\n                component={SavedMovies}\r\n                savedMoviesSearchValueCheckboxes={[\r\n                  {\r\n                    title: \"Название\",\r\n                    nameState: \"nameSavedMoviesCheckbox\",\r\n                    state: nameSavedMoviesCheckbox,\r\n                    setState: setNameSavedMoviesCheckbox,\r\n                    handler: handleSavedMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Год\",\r\n                    nameState: \"yearSavedMoviesCheckbox\",\r\n                    state: yearSavedMoviesCheckbox,\r\n                    setState: setYearSavedMoviesCheckbox,\r\n                    handler: handleSavedMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Страна\",\r\n                    nameState: \"countrySavedMoviesCheckbox\",\r\n                    state: countrySavedMoviesCheckbox,\r\n                    setState: setCountrySavedMoviesCheckbox,\r\n                    handler: handleSavedMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Режиссер\",\r\n                    nameState: \"directorSavedMoviesCheckbox\",\r\n                    state: directorSavedMoviesCheckbox,\r\n                    setState: setDirectorSavedMoviesCheckbox,\r\n                    handler: handleSavedMoviesCheckboxes,\r\n                  },\r\n                  {\r\n                    title: \"Описание\",\r\n                    nameState: \"descriptionSavedMoviesCheckbox\",\r\n                    state: descriptionSavedMoviesCheckbox,\r\n                    setState: setDescriptionSavedMoviesCheckbox,\r\n                    handler: handleSavedMoviesCheckboxes,\r\n                  },\r\n                ]}\r\n                savedMoviesSortingCheckboxes={[\r\n                  {\r\n                    title: \"Короткометражки\",\r\n                    state: shortSavedMoviesCheckbox,\r\n                    handler: handleShortMoviesCheckbox,\r\n                  },\r\n                  {\r\n                    title: \"Алфавит\",\r\n                    state: alphabetSavedMoviesCheckbox,\r\n                    handler: handleAlphabetSavedMoviesCheckbox,\r\n                  },\r\n                ]}\r\n                savedMoviesSettingsButtons={[\r\n                  {\r\n                    title: \"Мульти\",\r\n                    state: multiSavedMoviesCheckbox,\r\n                    handler: handleMultiSavedMoviesCheckbox,\r\n                    type: \"checkbox,\",\r\n                    className: \"multi\",\r\n                  },\r\n                  {\r\n                    title: langSavedMoviesCards,\r\n                    handler: handleLangSavedMovies,\r\n                    type: \"button\",\r\n                    className: \"lang\",\r\n                  },\r\n                  {\r\n                    title: \"Сбросить\",\r\n                    handler: handleResetSavedMovies,\r\n                    type: \"button\",\r\n                    className: \"reset\",\r\n                  },\r\n                ]}\r\n                moviesCardTitle={langSavedMoviesCards}\r\n                locationSavedMovies={locationSavedMovies}\r\n                loggedIn={loggedIn}\r\n                // если есть отфильтрованные сохраненные фильмы или форма поиска уже была отправлена,\r\n                // показывать всегда все отфильтрованные сохраненные фильмы, иначе показать только все сохраненные фильмы.\r\n                savedMoviesCards={\r\n                  filteredSavedMoviesCards.length || searchValueSavedMovies\r\n                    ? filteredSavedMoviesCards\r\n                    : savedMoviesCards\r\n                }\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}\r\n                onSearchSavedMovies={onSearchSavedMovies}\r\n                searchMessageSavedMovies={messageWithResultSearchSavedMovies}\r\n                previousValueSearchForm={searchValueSavedMovies}\r\n              />\r\n              <Route path=\"/\">\r\n                <NotFound />\r\n              </Route>\r\n            </Switch>\r\n          )}\r\n        </main>\r\n        {!visiblePreloaderLoggedIn && <Footer visibleFooter={visibleFooter} />}\r\n        <ErrorMessagePopup\r\n          errorMessage={errorMessagePopupForError}\r\n          onClose={handleCloseErrorMessagePopup}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}